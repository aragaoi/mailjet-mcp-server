---
openapi: 3.1.0
info:
  title: Mailjet API
  description: A complete collection of all publicly available endpoints and methods for the Mailjet API
  version: 1.0.0
servers:
  - url: "https://api.mailjet.com"
    description: US Mailjet
  - url: "https://api.eu.mailjet.com"
    description: EU Mailjet
paths:
  /v3/REST/activitycounters:
    get:
      tags:
        - Statistics
      summary: Time-series metrics for activities and events
      description: Read-only metrics system tracking user activities and system events as time-series data
      operationId: get_v3_activitycounters
      parameters:
        - name: APIKeyID
          in: query
          schema:
            type: integer
          description: ""
        - name: CounterType
          in: query
          schema:
            type: string
          description: "Counter type to retrieve. (e.g. 'WSL', 'WSH', 'WSD', 'WSM', 'WOL', 'WOH', 'WOD', 'WOM', 'WLL', 'WLH', 'WLD', 'WLM', 'DUL', 'AAL', 'AAM', 'AAD', AUL', 'AUM', 'AUD', 'BCL', 'BOL', 'LVL', 'LVH', 'LVD', 'LVM', 'LCL', 'LCH', 'LCD', 'LCM')"
        - name: FromTS
          in: query
          schema:
            type: string
          description: Retrieve statistics later than this timestamp
        - name: IdentityID
          in: query
          schema:
            type: integer
          description: ""
        - name: SourceID2
          in: query
          schema:
            type: integer
          description: ""
        - name: SourceIDs
          in: query
          schema:
            type: array
            items:
              type: integer
          description: ""
        - name: ToTS
          in: query
          schema:
            type: string
          description: Retrieve statistics before or equal to this timestamp
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/activitycountersResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/aggregategraphstatistics:
    get:
      tags:
        - Statistics
      summary: Combined metrics for multiple campaigns.
      description: Aggregated campaign statistics grouped over intervals.
      operationId: get_v3_aggregategraphstatistics
      parameters:
        - name: CampaignAggregateID
          in: query
          schema:
            type: string
          description: Only show statistics for this aggregattion
        - name: Range
          in: query
          schema:
            type: string
          description: The period of the aggregates (24 hours or 7 days)
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/aggregategraphstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apikey:
    get:
      tags:
        - Settings
      summary: Manage credentials for API and SMTP access.
      description: Manage your Mailjet API Keys. API keys are used as credentials to access the API and SMTP server.
      operationId: get_v3_apikey
      parameters:
        - name: APIKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which APIKey equals the specified value.
        - name: ConfirmKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which ConfirmKey equals the specified value.
        - name: CustomStatus
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which CustomStatus equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsActive equals the specified value.
        - name: IsMaster
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsMaster equals the specified value.
        - name: KeyType
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which KeyType equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which Name equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: User for which to show API keys.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Settings
      summary: Manage credentials for API and SMTP access.
      description: Manage your Mailjet API Keys. API keys are used as credentials to access the API and SMTP server.
      operationId: post_v3_apikey
      parameters:
        - name: APIKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which APIKey equals the specified value.
        - name: ConfirmKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which ConfirmKey equals the specified value.
        - name: CustomStatus
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which CustomStatus equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsActive equals the specified value.
        - name: IsMaster
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsMaster equals the specified value.
        - name: KeyType
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which KeyType equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which Name equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: User for which to show API keys.
      responses:
        "201":
          description: apikey created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Settings
      summary: Manage credentials for API and SMTP access.
      description: Manage your Mailjet API Keys. API keys are used as credentials to access the API and SMTP server.
      operationId: put_v3_apikey
      parameters:
        - name: APIKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which APIKey equals the specified value.
        - name: ConfirmKey
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which ConfirmKey equals the specified value.
        - name: CustomStatus
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which CustomStatus equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsActive equals the specified value.
        - name: IsMaster
          in: query
          schema:
            type: boolean
          description: Only retrieve apikey resources for which IsMaster equals the specified value.
        - name: KeyType
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which KeyType equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve apikey resources for which Name equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: User for which to show API keys.
      responses:
        "200":
          description: apikey updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apikey/{apikey_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific apikey by ID
      description: Retrieve a single apikey resource by its ID
      operationId: get_v3_apikey_id
      parameters:
        - name: apikey_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apikeyaccess:
    get:
      tags:
        - Settings
      summary: API key access permissions for users.
      description: Access rights description on API keys for subaccounts/users.
      operationId: get_v3_apikeyaccess
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve apikeyaccess resources for which APIKey ID equals the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: ""
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only show APIKeyAccess resources for which IsActive equals the specified value.
        - name: RealUser
          in: query
          schema:
            type: integer
          description: Only retrieve apikeyaccess resources for which RealUser ID equals the specified value.
        - name: SubAccount
          in: query
          schema:
            type: integer
          description: Only retrieve apikeyaccess resources for which SubAccount ID equals the specified value.
        - name: Token
          in: query
          schema:
            type: string
          description: Only show APIKeyAccess resources for which Token equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve apikeyaccess resources for which User ID equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyaccessResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apikeyaccess/{apikeyaccess_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific apikeyaccess by ID
      description: Retrieve a single apikeyaccess resource by its ID
      operationId: get_v3_apikeyaccess_id
      parameters:
        - name: apikeyaccess_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyaccessResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apikeyaccessgrantor:
    get:
      tags:
        - Settings
      summary: API key access management between users and subaccounts
      description: API key access information that enables management of access rights between users and subaccounts. Provides a read-only view of API keys available for granting access to users.
      operationId: get_v3_apikeyaccessgrantor
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: ""
        - name: Name
          in: query
          schema:
            type: string
          description: Filter by name (exact match) or company name for master keys.
        - name: RealUserID
          in: query
          schema:
            type: integer
          description: ""
        - name: SubAccountID
          in: query
          schema:
            type: integer
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyaccessgrantorResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apikeyaccessgrantor/{apikeyaccessgrantor_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific apikeyaccessgrantor by ID
      description: Retrieve a single apikeyaccessgrantor resource by its ID
      operationId: get_v3_apikeyaccessgrantor_id
      parameters:
        - name: apikeyaccessgrantor_ID
          in: path
          schema:
            type: string
          description: Unique identifier for this access grantor record.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeyaccessgrantorResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apikeytotals:
    get:
      tags:
        - Legacy
        - Settings
      summary: Lifetime statistics for API key usage.
      description: "Global counts for an API Key, since its creation."
      operationId: get_v3_apikeytotals
      parameters:
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeytotalsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apikeytotals/{apikeytotals_ID}":
    get:
      tags:
        - Legacy
        - Settings
      summary: Get a specific apikeytotals by ID
      description: Retrieve a single apikeytotals resource by its ID
      operationId: get_v3_apikeytotals_id
      parameters:
        - name: apikeytotals_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apikeytotalsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apitoken:
    get:
      tags:
        - Settings
      summary: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      description: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      operationId: get_v3_apitoken
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve APIToken resources for which APIKey equals the specified value.
        - name: CatchedIp
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which CatchedIP equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve APIToken resources for which IsActive equals the specified value.
        - name: IsAPIKeyActive
          in: query
          schema:
            type: boolean
          description: Filter on IsActive field for API Key of token.
        - name: Token
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which Token equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apitokenResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Settings
      summary: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      description: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      operationId: delete_v3_apitoken
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve APIToken resources for which APIKey equals the specified value.
        - name: CatchedIp
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which CatchedIP equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve APIToken resources for which IsActive equals the specified value.
        - name: IsAPIKeyActive
          in: query
          schema:
            type: boolean
          description: Filter on IsActive field for API Key of token.
        - name: Token
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which Token equals the specified value.
      responses:
        "204":
          description: apitoken deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Settings
      summary: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      description: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      operationId: post_v3_apitoken
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve APIToken resources for which APIKey equals the specified value.
        - name: CatchedIp
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which CatchedIP equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve APIToken resources for which IsActive equals the specified value.
        - name: IsAPIKeyActive
          in: query
          schema:
            type: boolean
          description: Filter on IsActive field for API Key of token.
        - name: Token
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which Token equals the specified value.
      responses:
        "201":
          description: apitoken created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apitokenResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Settings
      summary: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      description: "Access token for API, used to give access to an API Key in conjunction with our IFrame API."
      operationId: put_v3_apitoken
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve APIToken resources for which APIKey equals the specified value.
        - name: CatchedIp
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which CatchedIP equals the specified value.
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve APIToken resources for which IsActive equals the specified value.
        - name: IsAPIKeyActive
          in: query
          schema:
            type: boolean
          description: Filter on IsActive field for API Key of token.
        - name: Token
          in: query
          schema:
            type: string
          description: Only retrieve APIToken resources for which Token equals the specified value.
      responses:
        "200":
          description: apitoken updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apitokenResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apitoken/{apitoken_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific apitoken by ID
      description: Retrieve a single apitoken resource by its ID
      operationId: get_v3_apitoken_id
      parameters:
        - name: apitoken_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apitokenResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/apppreferences:
    get:
      tags:
        - Settings
      summary: Key-value settings storage for API configurations
      description: Application preferences that store key-value settings associated with API keys. These preferences allow for persistent configuration storage for Mailjet app.
      operationId: get_v3_apppreferences
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: ""
        - name: Key
          in: query
          schema:
            type: string
          description: Filter by preference key name (supports comma-separated list of keys).
        - name: KeyCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: KeyLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: KeyLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: KeyLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: KeyLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: KeyRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: KeyRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowAllApikeys
          in: query
          schema:
            type: boolean
          description: "When set to true, allows master keys to view preferences for all API keys they own."
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apppreferencesResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/apppreferences/{apppreferences_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific apppreferences by ID
      description: Retrieve a single apppreferences resource by its ID
      operationId: get_v3_apppreferences_id
      parameters:
        - name: apppreferences_ID
          in: path
          schema:
            type: string
          description: Unique identifier for this preference.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apppreferencesResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/axtesting:
    get:
      tags:
        - Campaigns
      summary: Email campaign version testing tool.
      description: A/B testing system for email campaigns that allows testing multiple newsletter versions to automatically determine the most effective one based on performance metrics.
      operationId: get_v3_axtesting
      parameters:
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: "Filter by Deleteted property's values"
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: "Filter by Starred property's values"
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list filter
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/axtestingResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Campaigns
      summary: Email campaign version testing tool.
      description: A/B testing system for email campaigns that allows testing multiple newsletter versions to automatically determine the most effective one based on performance metrics.
      operationId: delete_v3_axtesting
      parameters:
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: "Filter by Deleteted property's values"
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: "Filter by Starred property's values"
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list filter
      responses:
        "204":
          description: axtesting deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Campaigns
      summary: Email campaign version testing tool.
      description: A/B testing system for email campaigns that allows testing multiple newsletter versions to automatically determine the most effective one based on performance metrics.
      operationId: post_v3_axtesting
      parameters:
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: "Filter by Deleteted property's values"
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: "Filter by Starred property's values"
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list filter
      responses:
        "201":
          description: axtesting created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/axtestingResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Campaigns
      summary: Email campaign version testing tool.
      description: A/B testing system for email campaigns that allows testing multiple newsletter versions to automatically determine the most effective one based on performance metrics.
      operationId: put_v3_axtesting
      parameters:
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: "Filter by Deleteted property's values"
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: "Filter by Starred property's values"
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only show AX testing objects for this contact list filter
      responses:
        "200":
          description: axtesting updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/axtestingResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/axtesting/{axtesting_ID}":
    get:
      tags:
        - Campaigns
      summary: Get a specific axtesting by ID
      description: Retrieve a single axtesting resource by its ID
      operationId: get_v3_axtesting_id
      parameters:
        - name: axtesting_ID
          in: path
          schema:
            type: string
          description: Unique identifier for this A/B test.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/axtestingResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/batchjob:
    get:
      tags:
        - Contacts
        - Messages
      summary: Background processing tasks for large operations.
      description: "Asynchronous background processing tasks executed on the Mailjet infrastructure. Batch jobs handle operations that require significant processing time such as contact imports, newsletter sending, and bulk operations."
      operationId: get_v3_batchjob
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which APIKey ID equals the specified value.
        - name: Data
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which Data ID equals the specified value.
        - name: JobType
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which JobType equals the specified value.
        - name: MaxJobEnd
          in: query
          schema:
            type: string
          description: Maximum value for JobEnd Timestamp.
        - name: MaxJobStart
          in: query
          schema:
            type: string
          description: Maximum value for JobStart Timestamp.
        - name: MaxRequestAt
          in: query
          schema:
            type: string
          description: Maximum value for MaxRequestAt Timestamp.
        - name: Method
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Method equals the specified value.
        - name: MinJobEnd
          in: query
          schema:
            type: string
          description: Minimum value for JobEnd Timestamp.
        - name: MinJobStart
          in: query
          schema:
            type: string
          description: Minimum value for JobStart Timestamp.
        - name: MinRequestAt
          in: query
          schema:
            type: string
          description: Minimum value for MaxRequestAt Timestamp.
        - name: RefID
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which RefID equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Status equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchjobResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
        - Messages
      summary: Background processing tasks for large operations.
      description: "Asynchronous background processing tasks executed on the Mailjet infrastructure. Batch jobs handle operations that require significant processing time such as contact imports, newsletter sending, and bulk operations."
      operationId: post_v3_batchjob
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which APIKey ID equals the specified value.
        - name: Data
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which Data ID equals the specified value.
        - name: JobType
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which JobType equals the specified value.
        - name: MaxJobEnd
          in: query
          schema:
            type: string
          description: Maximum value for JobEnd Timestamp.
        - name: MaxJobStart
          in: query
          schema:
            type: string
          description: Maximum value for JobStart Timestamp.
        - name: MaxRequestAt
          in: query
          schema:
            type: string
          description: Maximum value for MaxRequestAt Timestamp.
        - name: Method
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Method equals the specified value.
        - name: MinJobEnd
          in: query
          schema:
            type: string
          description: Minimum value for JobEnd Timestamp.
        - name: MinJobStart
          in: query
          schema:
            type: string
          description: Minimum value for JobStart Timestamp.
        - name: MinRequestAt
          in: query
          schema:
            type: string
          description: Minimum value for MaxRequestAt Timestamp.
        - name: RefID
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which RefID equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Status equals the specified value.
      responses:
        "201":
          description: batchjob created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchjobResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
        - Messages
      summary: Background processing tasks for large operations.
      description: "Asynchronous background processing tasks executed on the Mailjet infrastructure. Batch jobs handle operations that require significant processing time such as contact imports, newsletter sending, and bulk operations."
      operationId: put_v3_batchjob
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which APIKey ID equals the specified value.
        - name: Data
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which Data ID equals the specified value.
        - name: JobType
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which JobType equals the specified value.
        - name: MaxJobEnd
          in: query
          schema:
            type: string
          description: Maximum value for JobEnd Timestamp.
        - name: MaxJobStart
          in: query
          schema:
            type: string
          description: Maximum value for JobStart Timestamp.
        - name: MaxRequestAt
          in: query
          schema:
            type: string
          description: Maximum value for MaxRequestAt Timestamp.
        - name: Method
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Method equals the specified value.
        - name: MinJobEnd
          in: query
          schema:
            type: string
          description: Minimum value for JobEnd Timestamp.
        - name: MinJobStart
          in: query
          schema:
            type: string
          description: Minimum value for JobStart Timestamp.
        - name: MinRequestAt
          in: query
          schema:
            type: string
          description: Minimum value for MaxRequestAt Timestamp.
        - name: RefID
          in: query
          schema:
            type: integer
          description: Only retrieve batchjob resources for which RefID equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve batchjob resources for which Status equals the specified value.
      responses:
        "200":
          description: batchjob updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchjobResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/batchjob/{batchjob_ID}":
    get:
      tags:
        - Contacts
        - Messages
      summary: Get a specific batchjob by ID
      description: Retrieve a single batchjob resource by its ID
      operationId: get_v3_batchjob_id
      parameters:
        - name: batchjob_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/batchjobResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/bouncestatistics:
    get:
      tags:
        - Message Events
        - Statistics
      summary: Email delivery failure statistics.
      description: Statistics on the bounces generated by emails sent on a given API Key.
      operationId: get_v3_bouncestatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Filter bounces on this campaign (ID).
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Filter on campaign status.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Filter bounces on this contact list (ID).
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Filter bounces on this custom campaign value.
        - name: EventFromTs
          in: query
          schema:
            type: string
          description: Minimum value for BounceAt.
        - name: EventToTs
          in: query
          schema:
            type: string
          description: Maximum value for BounceAt
        - name: From
          in: query
          schema:
            type: string
          description: Filter results on from address.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Filter results on from domain.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Minimum value for campaign SendStartAt timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Type of from address.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Filter on Campaign IsDeleted.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Filter on whether Campaign was started by the newsletter tool or not.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Filter on Campaign IsStarred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Filter on message status.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Maximum value for campaign SendStartAt timestamp.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bouncestatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/bouncestatistics/{bouncestatistics_ID}":
    get:
      tags:
        - Message Events
        - Statistics
      summary: Get a specific bouncestatistics by ID
      description: Retrieve a single bouncestatistics resource by its ID
      operationId: get_v3_bouncestatistics_id
      parameters:
        - name: bouncestatistics_ID
          in: path
          schema:
            type: string
          description: ID of the Message that led to this bounce.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bouncestatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaign:
    get:
      tags:
        - Campaigns
      summary: Record of sent email campaigns.
      description: "Historical view of sent emails, both transactional and marketing. Each e-mail going through Mailjet is attached to a Campaign. This object is automatically generated by Mailjet."
      operationId: get_v3_campaign
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaign resources for which Status equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns for this contact list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with this custom campaign value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaign resources for which From equals the specified value.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with this from domain.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaign resources for which IsDeleted equals the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Campaigns
      summary: Record of sent email campaigns.
      description: "Historical view of sent emails, both transactional and marketing. Each e-mail going through Mailjet is attached to a Campaign. This object is automatically generated by Mailjet."
      operationId: put_v3_campaign
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaign resources for which Status equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns for this contact list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with this custom campaign value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaign resources for which From equals the specified value.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with this from domain.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaign resources for which IsDeleted equals the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: ""
      responses:
        "200":
          description: campaign updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/campaign/{campaign_ID}":
    get:
      tags:
        - Campaigns
      summary: Get a specific campaign by ID
      description: Retrieve a single campaign resource by its ID
      operationId: get_v3_campaign_id
      parameters:
        - name: campaign_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaignaggregate:
    get:
      tags:
        - Campaigns
      summary: Custom groupings of email campaigns.
      description: User defined campaign aggregates
      operationId: get_v3_campaignaggregate
      parameters:
        - name: ContactFilter
          in: query
          schema:
            type: integer
          description: Only show aggregates for this segment
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show aggregates for this contact list
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only show aggregates for this sender
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignaggregateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Campaigns
      summary: Custom groupings of email campaigns.
      description: User defined campaign aggregates
      operationId: delete_v3_campaignaggregate
      parameters:
        - name: ContactFilter
          in: query
          schema:
            type: integer
          description: Only show aggregates for this segment
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show aggregates for this contact list
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only show aggregates for this sender
      responses:
        "204":
          description: campaignaggregate deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Campaigns
      summary: Custom groupings of email campaigns.
      description: User defined campaign aggregates
      operationId: post_v3_campaignaggregate
      parameters:
        - name: ContactFilter
          in: query
          schema:
            type: integer
          description: Only show aggregates for this segment
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show aggregates for this contact list
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only show aggregates for this sender
      responses:
        "201":
          description: campaignaggregate created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignaggregateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Campaigns
      summary: Custom groupings of email campaigns.
      description: User defined campaign aggregates
      operationId: put_v3_campaignaggregate
      parameters:
        - name: ContactFilter
          in: query
          schema:
            type: integer
          description: Only show aggregates for this segment
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only show aggregates for this contact list
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only show aggregates for this sender
      responses:
        "200":
          description: campaignaggregate updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignaggregateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/campaignaggregate/{campaignaggregate_ID}":
    get:
      tags:
        - Campaigns
      summary: Get a specific campaignaggregate by ID
      description: Retrieve a single campaignaggregate resource by its ID
      operationId: get_v3_campaignaggregate_id
      parameters:
        - name: campaignaggregate_ID
          in: path
          schema:
            type: string
          description: Unique ID of the object
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignaggregateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaigndraft:
    get:
      tags:
        - Campaigns
      summary: Email campaign creation and management.
      description: CampaignDraft data. Newsletter and CampaignDraft objects are differentiated by the EditMode values.
      operationId: get_v3_campaigndraft
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which AXTesting equals the specified value.
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which Campaign equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which ContactsList equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources for which EditMode equals the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources which already have a corresponding campaign.
        - name: IsCampaignTemplate
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsDeleted equals the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsHandled equals the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsStarred equals the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified CampaignDraft recources.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which NewsLetterTemplate equals the specified value.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only CampaignDraft resources with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources with this subject.
        - name: Template
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources based on this template.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigndraftResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Campaigns
      summary: Email campaign creation and management.
      description: CampaignDraft data. Newsletter and CampaignDraft objects are differentiated by the EditMode values.
      operationId: post_v3_campaigndraft
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which AXTesting equals the specified value.
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which Campaign equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which ContactsList equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources for which EditMode equals the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources which already have a corresponding campaign.
        - name: IsCampaignTemplate
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsDeleted equals the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsHandled equals the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsStarred equals the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified CampaignDraft recources.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which NewsLetterTemplate equals the specified value.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only CampaignDraft resources with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources with this subject.
        - name: Template
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources based on this template.
      responses:
        "201":
          description: campaigndraft created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigndraftResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Campaigns
      summary: Email campaign creation and management.
      description: CampaignDraft data. Newsletter and CampaignDraft objects are differentiated by the EditMode values.
      operationId: put_v3_campaigndraft
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which AXTesting equals the specified value.
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which Campaign equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which ContactsList equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources for which EditMode equals the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources which already have a corresponding campaign.
        - name: IsCampaignTemplate
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsDeleted equals the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsHandled equals the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve CampaignDraft resources for which IsStarred equals the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified CampaignDraft recources.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources for which NewsLetterTemplate equals the specified value.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only CampaignDraft resources with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve CampaignDraft resources with this subject.
        - name: Template
          in: query
          schema:
            type: integer
          description: Only retrieve CampaignDraft resources based on this template.
      responses:
        "200":
          description: campaigndraft updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigndraftResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/campaigndraft/{campaigndraft_ID}":
    get:
      tags:
        - Campaigns
      summary: Get a specific campaigndraft by ID
      description: Retrieve a single campaigndraft resource by its ID
      operationId: get_v3_campaigndraft_id
      parameters:
        - name: campaigndraft_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigndraftResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaigngraphstatistics:
    get:
      tags:
        - Campaigns
        - Legacy
        - Statistics
      summary: Time-based performance data for campaigns.
      description: API Campaign statistics grouped over intervals
      operationId: get_v3_campaigngraphstatistics
      parameters:
        - name: Click
          in: query
          schema:
            type: boolean
          description: When  != 0 returns stats in ClickedCount
        - name: IDS
          in: query
          schema:
            type: string
          description: Retrieve statistics only for the specified IDs
        - name: Open
          in: query
          schema:
            type: boolean
          description: When  != 0 returns stats in OpenedCount
        - name: Range
          in: query
          schema:
            type: string
          description: 24h or 7d. Period = 15 mins for 24h and 30 mins for 7d
        - name: Spam
          in: query
          schema:
            type: boolean
          description: When  != 0 returns stats in SpamCount
        - name: Unsub
          in: query
          schema:
            type: boolean
          description: When  != 0 returns stats in UnsubCount
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigngraphstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/campaigngraphstatistics/{campaigngraphstatistics_ID}":
    get:
      tags:
        - Campaigns
        - Legacy
        - Statistics
      summary: Get a specific campaigngraphstatistics by ID
      description: Retrieve a single campaigngraphstatistics resource by its ID
      operationId: get_v3_campaigngraphstatistics_id
      parameters:
        - name: campaigngraphstatistics_ID
          in: path
          schema:
            type: string
          description: Unique ID of the object
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaigngraphstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaignoverview:
    get:
      tags:
        - Campaigns
      summary: Summary view of all campaign types.
      description: "Returns a list of campaigns, including the AX campaigns"
      operationId: get_v3_campaignoverview
      parameters:
        - name: All
          in: query
          schema:
            type: boolean
          description: Retrieve all campaigns that are not deleted
        - name: Archived
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter resources for which IsArchived equals the specified value and campaign
        - name: Drafts
          in: query
          schema:
            type: boolean
          description: Retrieve all campaigns that are in draft mode
        - name: ID
          in: query
          schema:
            type: integer
          description: ""
        - name: IDType
          in: query
          schema:
            type: string
          description: "Retrieve only campaignoverview resources for which IDType equals the specified value (AX, Campaign, NL or any combination of these 3)"
        - name: Programmed
          in: query
          schema:
            type: boolean
          description: Retrieve all programmed newsletters
        - name: Sent
          in: query
          schema:
            type: boolean
          description: Retrieve all sent campaigns
        - name: Starred
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters and campaigns with IsStarred equal to the specified value
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve newsletters and campaigns with this subject.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignoverviewResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/campaignoverview/{campaignoverview_ID}":
    get:
      tags:
        - Campaigns
      summary: Get a specific campaignoverview by ID
      description: Retrieve a single campaignoverview resource by its ID
      operationId: get_v3_campaignoverview_id
      parameters:
        - name: campaignoverview_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignoverviewResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/campaignstatistics:
    get:
      tags:
        - Campaigns
        - Legacy
        - Statistics
      summary: Performance metrics for email campaigns.
      description: "Statistics related to emails processed by Mailjet, grouped in a Campaign."
      operationId: get_v3_campaignstatistics
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Retrieve only campaigns for a particular AXTesting ID
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have blocked messages.
        - name: Bounced
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have bounced messages.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaignstatistics resources for which CampaignStatus equals the specified value.
        - name: Click
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have clicks registered for messages.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaignstatistics resources for which ContactsList equals the specified value.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Timestamp for the start date
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns for which CampaignType matches the specified value.
        - name: GroupAX
          in: query
          schema:
            type: boolean
          description: If this is True all campaigns will be grouped by their AXTesting ID
        - name: HardBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: "If set, Only retrieve campaigns which are marked as deleted."
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: "If set, Only retrieve campaigns which are marked as starred."
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve campaignstatistics resources for which LastActivityAt equals the specified value.
        - name: MaxLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve campaigns that have LastActivityAt less than this value.
        - name: MinLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve campaigns that have LastActivityAt larger than this value.
        - name: NewsLetter
          in: query
          schema:
            type: integer
          description: Only retrieve campaignstatistics resources for which NewsLetter equals the specified value.
        - name: Open
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have opens registered for messages.
        - name: Queued
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have queued messages.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Retrieve only campaigns for a particular contact filter
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve campaignstatistics resources for which Sender equals the specified value.
        - name: Sent
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have sent messages.
        - name: ShowExtraData
          in: query
          schema:
            type: boolean
          description: If this is True fill-in ContactListName and SegmentName properties. Otherwise they are empty.
        - name: SoftBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Spam
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns that have spam complaints.
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve campaigns whose subject contains the specified value.
        - name: ToTS
          in: query
          schema:
            type: string
          description: Timestamp for the end date
        - name: Unsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve campaignstatistics resources for which Unsubscribed count is nonzero.
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: "Retrieve only campaigns, started by a particular workflow"
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/campaignstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/clickstatistics:
    get:
      tags:
        - Message Events
        - Statistics
      summary: Data on recipient link clicks.
      description: Click statistics for messages.
      operationId: get_v3_clickstatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns to given Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: EventFromTs
          in: query
          schema:
            type: string
          description: Minimum value for ClickedAt
        - name: EventToTs
          in: query
          schema:
            type: string
          description: Maximum value for ClickedAt
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageID
          in: query
          schema:
            type: integer
          description: Only retrieve messages with the given ID.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clickstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/clickstatistics/{clickstatistics_ID}":
    get:
      tags:
        - Message Events
        - Statistics
      summary: Get a specific clickstatistics by ID
      description: Retrieve a single clickstatistics resource by its ID
      operationId: get_v3_clickstatistics_id
      parameters:
        - name: clickstatistics_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for the click event.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clickstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contact:
    get:
      tags:
        - Contacts
      summary: Individual subscriber information and management.
      description: Manage the details of a Contact.
      operationId: get_v3_contact
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contacts targeted by this campaign.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contacts from this contact list.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Retrieve contacts which are in the given exclusion status.
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts which have been unsubscribed (or not).
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contacts with the specified status.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Individual subscriber information and management.
      description: Manage the details of a Contact.
      operationId: post_v3_contact
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contacts targeted by this campaign.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contacts from this contact list.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Retrieve contacts which are in the given exclusion status.
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts which have been unsubscribed (or not).
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contacts with the specified status.
      responses:
        "201":
          description: contact created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Individual subscriber information and management.
      description: Manage the details of a Contact.
      operationId: put_v3_contact
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contacts targeted by this campaign.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contacts from this contact list.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Retrieve contacts which are in the given exclusion status.
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts which have been unsubscribed (or not).
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contact resources for which LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contacts with the specified status.
      responses:
        "200":
          description: contact updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contact/{contact_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contact by ID
      description: Retrieve a single contact resource by its ID
      operationId: get_v3_contact_id
      parameters:
        - name: contact_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactactivity:
    get:
      tags:
        - Contacts
      summary: Contact engagement tracking for analytics and automation
      description: System for tracking contact engagement events and activities within the Mailjet platform. Records various user interactions that can be used for analytics and automation.
      operationId: get_v3_contactactivity
      parameters:
        - name: ContactId
          in: query
          schema:
            type: string
          description: Filter activities by the ID of the contact who performed them.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactactivityResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactactivity/{contactactivity_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contactactivity by ID
      description: Retrieve a single contactactivity resource by its ID
      operationId: get_v3_contactactivity_id
      parameters:
        - name: contactactivity_ID
          in: path
          schema:
            type: string
          description: Unique identifier for this activity record.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactactivityResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactdata:
    get:
      tags:
        - Contacts
      summary: Additional contact information storage system.
      description: This resource can be used to examine and manipulate the associated extra static data of a contact.
      operationId: get_v3_contactdata
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which Campaign equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which ContactEmail equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which ContactsList equals the specified value.
        - name: DateFormat
          in: query
          schema:
            type: string
          description: ""
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Fields
          in: query
          schema:
            type: string
          description: Only retrieve the value for the named field from the extra contact data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which IsExcludedFromCampaigns equals the specified value.=
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which Contact.IsUnsubscribed equals the specified value
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.Status equals the specified value.
        - name: TimeZone
          in: query
          schema:
            type: string
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactdataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Additional contact information storage system.
      description: This resource can be used to examine and manipulate the associated extra static data of a contact.
      operationId: delete_v3_contactdata
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which Campaign equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which ContactEmail equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which ContactsList equals the specified value.
        - name: DateFormat
          in: query
          schema:
            type: string
          description: ""
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Fields
          in: query
          schema:
            type: string
          description: Only retrieve the value for the named field from the extra contact data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which IsExcludedFromCampaigns equals the specified value.=
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which Contact.IsUnsubscribed equals the specified value
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.Status equals the specified value.
        - name: TimeZone
          in: query
          schema:
            type: string
          description: ""
      responses:
        "204":
          description: contactdata deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Additional contact information storage system.
      description: This resource can be used to examine and manipulate the associated extra static data of a contact.
      operationId: post_v3_contactdata
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which Campaign equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which ContactEmail equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which ContactsList equals the specified value.
        - name: DateFormat
          in: query
          schema:
            type: string
          description: ""
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Fields
          in: query
          schema:
            type: string
          description: Only retrieve the value for the named field from the extra contact data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which IsExcludedFromCampaigns equals the specified value.=
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which Contact.IsUnsubscribed equals the specified value
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.Status equals the specified value.
        - name: TimeZone
          in: query
          schema:
            type: string
          description: ""
      responses:
        "201":
          description: contactdata created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactdataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Additional contact information storage system.
      description: This resource can be used to examine and manipulate the associated extra static data of a contact.
      operationId: put_v3_contactdata
      parameters:
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which Campaign equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which ContactEmail equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve contactdata resources for which ContactsList equals the specified value.
        - name: DateFormat
          in: query
          schema:
            type: string
          description: ""
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Email equals the specified value (case insensitive).=
        - name: EmailCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: EmailLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: EmailLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: EmailLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: EmailLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: EmailRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: EmailRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Fields
          in: query
          schema:
            type: string
          description: Only retrieve the value for the named field from the extra contact data.
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which IsExcludedFromCampaigns equals the specified value.=
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contactdata resources for which Contact.IsUnsubscribed equals the specified value
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.LastActivityAt equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve contactdata resources for which Contact.Status equals the specified value.
        - name: TimeZone
          in: query
          schema:
            type: string
          description: ""
      responses:
        "200":
          description: contactdata updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactdataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactdata/{contactdata_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contactdata by ID
      description: Retrieve a single contactdata resource by its ID
      operationId: get_v3_contactdata_id
      parameters:
        - name: contactdata_ID
          in: path
          schema:
            type: string
          description: ID of this resource. It equals the Contact ID.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactdataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactfilter:
    get:
      tags:
        - Contacts
        - Segmentation
      summary: Segmentation rules for targeting specific contacts.
      description: A list of filter expressions for use in newsletters.
      operationId: get_v3_contactfilter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Show or hide deleted items along with the other items
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only contact filters with the specified status
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactfilterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
        - Segmentation
      summary: Segmentation rules for targeting specific contacts.
      description: A list of filter expressions for use in newsletters.
      operationId: delete_v3_contactfilter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Show or hide deleted items along with the other items
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only contact filters with the specified status
      responses:
        "204":
          description: contactfilter deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
        - Segmentation
      summary: Segmentation rules for targeting specific contacts.
      description: A list of filter expressions for use in newsletters.
      operationId: post_v3_contactfilter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Show or hide deleted items along with the other items
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only contact filters with the specified status
      responses:
        "201":
          description: contactfilter created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactfilterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
        - Segmentation
      summary: Segmentation rules for targeting specific contacts.
      description: A list of filter expressions for use in newsletters.
      operationId: put_v3_contactfilter
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Show or hide deleted items along with the other items
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only contact filters with the specified status
      responses:
        "200":
          description: contactfilter updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactfilterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactfilter/{contactfilter_ID}":
    get:
      tags:
        - Contacts
        - Segmentation
      summary: Get a specific contactfilter by ID
      description: Retrieve a single contactfilter resource by its ID
      operationId: get_v3_contactfilter_id
      parameters:
        - name: contactfilter_ID
          in: path
          schema:
            type: string
          description: ID of the filter
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactfilterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contacthistorydata:
    get:
      tags:
        - Contacts
      summary: Timeline of contact data changes.
      description: This resource can be used to examine the associated extra historical data of a contact.
      operationId: get_v3_contacthistorydata
      parameters:
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve contacthistorydata resources for the specified contact.
        - name: Last
          in: query
          schema:
            type: boolean
          description: "Is set to true, then only the last recorded value is returned. This can only be specified if Contact and Name are specified."
        - name: MaxCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is strictly less than the specified value.
        - name: MinCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is greater than or equal to the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which Name equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contacthistorydataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Timeline of contact data changes.
      description: This resource can be used to examine the associated extra historical data of a contact.
      operationId: delete_v3_contacthistorydata
      parameters:
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve contacthistorydata resources for the specified contact.
        - name: Last
          in: query
          schema:
            type: boolean
          description: "Is set to true, then only the last recorded value is returned. This can only be specified if Contact and Name are specified."
        - name: MaxCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is strictly less than the specified value.
        - name: MinCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is greater than or equal to the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which Name equals the specified value.
      responses:
        "204":
          description: contacthistorydata deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Timeline of contact data changes.
      description: This resource can be used to examine the associated extra historical data of a contact.
      operationId: post_v3_contacthistorydata
      parameters:
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve contacthistorydata resources for the specified contact.
        - name: Last
          in: query
          schema:
            type: boolean
          description: "Is set to true, then only the last recorded value is returned. This can only be specified if Contact and Name are specified."
        - name: MaxCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is strictly less than the specified value.
        - name: MinCreatedAt
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which CreatedAt is greater than or equal to the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve contacthistorydata resources for which Name equals the specified value.
      responses:
        "201":
          description: contacthistorydata created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contacthistorydataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contacthistorydata/{contacthistorydata_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contacthistorydata by ID
      description: Retrieve a single contacthistorydata resource by its ID
      operationId: get_v3_contacthistorydata_id
      parameters:
        - name: contacthistorydata_ID
          in: path
          schema:
            type: string
          description: ID of the data item.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contacthistorydataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactmetadata:
    get:
      tags:
        - Contacts
      summary: Schema definitions for contact data fields.
      description: Definition of available extra data items for contacts.
      operationId: get_v3_contactmetadata
      parameters:
        - name: DataType
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which DataType equals the specified value.
        - name: Namespace
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which Namespace equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactmetadataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Schema definitions for contact data fields.
      description: Definition of available extra data items for contacts.
      operationId: delete_v3_contactmetadata
      parameters:
        - name: DataType
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which DataType equals the specified value.
        - name: Namespace
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which Namespace equals the specified value.
      responses:
        "204":
          description: contactmetadata deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Schema definitions for contact data fields.
      description: Definition of available extra data items for contacts.
      operationId: post_v3_contactmetadata
      parameters:
        - name: DataType
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which DataType equals the specified value.
        - name: Namespace
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which Namespace equals the specified value.
      responses:
        "201":
          description: contactmetadata created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactmetadataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Schema definitions for contact data fields.
      description: Definition of available extra data items for contacts.
      operationId: put_v3_contactmetadata
      parameters:
        - name: DataType
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which DataType equals the specified value.
        - name: Namespace
          in: query
          schema:
            type: string
          description: Only retrieve contactmetadata resources for which Namespace equals the specified value.
      responses:
        "200":
          description: contactmetadata updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactmetadataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactmetadata/{contactmetadata_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contactmetadata by ID
      description: Retrieve a single contactmetadata resource by its ID
      operationId: get_v3_contactmetadata_id
      parameters:
        - name: contactmetadata_ID
          in: path
          schema:
            type: string
          description: ID of this definition.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactmetadataResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactslist:
    get:
      tags:
        - Contacts
      summary: Groups of contacts for sending campaigns.
      description: Manage your contact lists. One Contact might be associated to one or more ContactsList.
      operationId: get_v3_contactslist
      parameters:
        - name: Address
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Address equals the specified value.
        - name: ExcludeID
          in: query
          schema:
            type: integer
          description: Exclude ContactsList resources with specified ID from result.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve ContactsList resources for which IsDeleted equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Name equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Groups of contacts for sending campaigns.
      description: Manage your contact lists. One Contact might be associated to one or more ContactsList.
      operationId: delete_v3_contactslist
      parameters:
        - name: Address
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Address equals the specified value.
        - name: ExcludeID
          in: query
          schema:
            type: integer
          description: Exclude ContactsList resources with specified ID from result.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve ContactsList resources for which IsDeleted equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Name equals the specified value.
      responses:
        "204":
          description: contactslist deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Groups of contacts for sending campaigns.
      description: Manage your contact lists. One Contact might be associated to one or more ContactsList.
      operationId: post_v3_contactslist
      parameters:
        - name: Address
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Address equals the specified value.
        - name: ExcludeID
          in: query
          schema:
            type: integer
          description: Exclude ContactsList resources with specified ID from result.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve ContactsList resources for which IsDeleted equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Name equals the specified value.
      responses:
        "201":
          description: contactslist created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Groups of contacts for sending campaigns.
      description: Manage your contact lists. One Contact might be associated to one or more ContactsList.
      operationId: put_v3_contactslist
      parameters:
        - name: Address
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Address equals the specified value.
        - name: ExcludeID
          in: query
          schema:
            type: integer
          description: Exclude ContactsList resources with specified ID from result.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve ContactsList resources for which IsDeleted equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve ContactsList resources for which Name equals the specified value.
      responses:
        "200":
          description: contactslist updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactslist/{contactslist_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contactslist by ID
      description: Retrieve a single contactslist resource by its ID
      operationId: get_v3_contactslist_id
      parameters:
        - name: contactslist_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactslistsignup:
    get:
      tags:
        - Contacts
      summary: Subscription requests to contact lists.
      description: Contacts list signup request.
      operationId: get_v3_contactslistsignup
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for given API key.
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve ContactsListSignup resources for which Contact ID equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for given contacts list.
        - name: Domain
          in: query
          schema:
            type: string
          description: Only retrieve signup requests for given email domain.
        - name: Email
          in: query
          schema:
            type: string
          description: Shortcut fot filtering on Localpart@domain.
        - name: LocalPart
          in: query
          schema:
            type: string
          description: "Only retrieve signup requests for given email local part. If specified, domain must also be specified."
        - name: MaxConfirmAt
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for which ConfirmAt is less than specified value.
        - name: MaxSignupAt
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for which SignupAt is less than specified value.
        - name: MinConfirmAt
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for which ConfirmAt is larger than specified value.
        - name: MinSignupAt
          in: query
          schema:
            type: integer
          description: Only retrieve signup requests for which SignupAt is larger than specified value.
        - name: SignupIp
          in: query
          schema:
            type: string
          description: Only retrieve contactslistsignup resources for which SignupIp equals the specified value.=
        - name: SignupKey
          in: query
          schema:
            type: string
          description: ""
        - name: Source
          in: query
          schema:
            type: string
          description: Only retrieve ContactsListSignup resources for which Source equals the specified value.
        - name: SourceID
          in: query
          schema:
            type: integer
          description: Only retrieve ContactsListSignup resources for which SourceID equals the specified value.
        - name: ThrottleCheck
          in: query
          schema:
            type: boolean
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistsignupResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/contactslistsignup/{contactslistsignup_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific contactslistsignup by ID
      description: Retrieve a single contactslistsignup resource by its ID
      operationId: get_v3_contactslistsignup_id
      parameters:
        - name: contactslistsignup_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactslistsignupResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/contactstatistics:
    get:
      tags:
        - Contacts
        - Statistics
      summary: Email engagement metrics by individual contact.
      description: View message statistics for a given contact.
      operationId: get_v3_contactstatistics
      parameters:
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have blocked messages.
        - name: Bounced
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have bounced messages.
        - name: Click
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have clicks registered for messages.
        - name: HardBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: IncludeAnonymized
          in: query
          schema:
            type: boolean
          description: ""
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve Contactstatistics resources for which LastActivityAt equals the specified value.
        - name: MaxLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contacts that have LastActivityAt less than this value.
        - name: MinLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve contacts that have LastActivityAt larger than this value.
        - name: Open
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have opens registered for messages.
        - name: Queued
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have queued messages.
        - name: Sent
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have sent messages.
        - name: SoftBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Spam
          in: query
          schema:
            type: boolean
          description: Only retrieve contacts that have spam complaints.
        - name: Unsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve contactstatistics resources for which Unsubscribed is nonzero.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contactstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/csvimport:
    get:
      tags:
        - Contacts
      summary: Contact import system using CSV files.
      description: A wrapper for the CSV importer
      operationId: get_v3_csvimport
      parameters:
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/csvimportResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Contact import system using CSV files.
      description: A wrapper for the CSV importer
      operationId: post_v3_csvimport
      responses:
        "201":
          description: csvimport created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/csvimportResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Contact import system using CSV files.
      description: A wrapper for the CSV importer
      operationId: put_v3_csvimport
      responses:
        "200":
          description: csvimport updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/csvimportResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/csvimport/{csvimport_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific csvimport by ID
      description: Retrieve a single csvimport resource by its ID
      operationId: get_v3_csvimport_id
      parameters:
        - name: csvimport_ID
          in: path
          schema:
            type: string
          description: Unique ID of this CSV import file.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/csvimportResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/dns:
    get:
      tags:
        - Domains
      summary: Domain configuration for email sending.
      description: Sender Domain properties.
      operationId: get_v3_dns
      parameters:
        - name: IsCheckInProgress
          in: query
          schema:
            type: boolean
          description: Only retrieve DNS records where IsCheckInProgress matches the specified value.
        - name: IsSenderIdentified
          in: query
          schema:
            type: boolean
          description: Only retrieve DNS records where IsSenderIdentified matches the specified value.
        - name: IsYahooFBL
          in: query
          schema:
            type: boolean
          description: Only retrieve DNS records where IsYahooFBL matches the specified value.
        - name: MaxLastCheckAt
          in: query
          schema:
            type: string
          description: Only retrieve DNS records where LastCheckAt is strictly less than the specified value.
        - name: MinLastCheckAt
          in: query
          schema:
            type: string
          description: Only retrieve DNS records where LastCheckAt is larger than the specified value.
        - name: SPFStatus
          in: query
          schema:
            type: string
          description: Only retrieve DNS records where  SPFStatus matches the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dnsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/dns/{dns_ID}":
    get:
      tags:
        - Domains
      summary: Get a specific dns by ID
      description: Retrieve a single dns resource by its ID
      operationId: get_v3_dns_id
      parameters:
        - name: dns_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dnsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/domainstatistics:
    get:
      tags:
        - Legacy
        - Statistics
      summary: Performance metrics aggregated by email domain.
      description: View Campaign/Message/Click statistics grouped per domain.
      operationId: get_v3_domainstatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domainstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/domainstatistics/{domainstatistics_ID}":
    get:
      tags:
        - Legacy
        - Statistics
      summary: Get a specific domainstatistics by ID
      description: Retrieve a single domainstatistics resource by its ID
      operationId: get_v3_domainstatistics_id
      parameters:
        - name: domainstatistics_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domainstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/eventcallbackurl:
    get:
      tags:
        - Webhooks
      summary: Webhook configuration for event notifications.
      description: "Manage event-driven callback URLs, also called webhooks, used by the Mailjet platform when a specific action is triggered"
      operationId: get_v3_eventcallbackurl
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve EventcallbackUrl resources for which APIKey ID equals the specified value.
        - name: Backup
          in: query
          schema:
            type: boolean
          description: Retrieve only backup callback URLs.
        - name: EventType
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which EventType equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Status equals the specified value.
        - name: Version
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Version equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventcallbackurlResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Webhooks
      summary: Webhook configuration for event notifications.
      description: "Manage event-driven callback URLs, also called webhooks, used by the Mailjet platform when a specific action is triggered"
      operationId: delete_v3_eventcallbackurl
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve EventcallbackUrl resources for which APIKey ID equals the specified value.
        - name: Backup
          in: query
          schema:
            type: boolean
          description: Retrieve only backup callback URLs.
        - name: EventType
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which EventType equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Status equals the specified value.
        - name: Version
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Version equals the specified value.
      responses:
        "204":
          description: eventcallbackurl deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Webhooks
      summary: Webhook configuration for event notifications.
      description: "Manage event-driven callback URLs, also called webhooks, used by the Mailjet platform when a specific action is triggered"
      operationId: post_v3_eventcallbackurl
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve EventcallbackUrl resources for which APIKey ID equals the specified value.
        - name: Backup
          in: query
          schema:
            type: boolean
          description: Retrieve only backup callback URLs.
        - name: EventType
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which EventType equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Status equals the specified value.
        - name: Version
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Version equals the specified value.
      responses:
        "201":
          description: eventcallbackurl created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventcallbackurlResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Webhooks
      summary: Webhook configuration for event notifications.
      description: "Manage event-driven callback URLs, also called webhooks, used by the Mailjet platform when a specific action is triggered"
      operationId: put_v3_eventcallbackurl
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve EventcallbackUrl resources for which APIKey ID equals the specified value.
        - name: Backup
          in: query
          schema:
            type: boolean
          description: Retrieve only backup callback URLs.
        - name: EventType
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which EventType equals the specified value.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Status equals the specified value.
        - name: Version
          in: query
          schema:
            type: string
          description: Only retrieve eventcallbackurl resources for which Version equals the specified value.
      responses:
        "200":
          description: eventcallbackurl updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventcallbackurlResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/eventcallbackurl/{eventcallbackurl_ID}":
    get:
      tags:
        - Webhooks
      summary: Get a specific eventcallbackurl by ID
      description: Retrieve a single eventcallbackurl resource by its ID
      operationId: get_v3_eventcallbackurl_id
      parameters:
        - name: eventcallbackurl_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventcallbackurlResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/geostatistics:
    get:
      tags:
        - Statistics
      summary: Email engagement metrics by geographic location.
      description: Message click/open statistics grouped per country
      operationId: get_v3_geostatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/geostatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/graphstatistics:
    get:
      tags:
        - Legacy
        - Statistics
      summary: Time-series statistics for visual representation.
      description: API Campaign/message/click statistics grouped over intervals.
      operationId: get_v3_graphstatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: Contact
          in: query
          schema:
            type: string
          description: Only retrieve campaigns sent to the specified contact.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: RefTimeStampOldFormat
          in: query
          schema:
            type: boolean
          description: Enforce previous RefTimeStamp format
        - name: Scale
          in: query
          schema:
            type: string
          description: "Scale for this statistic (hour, day, week, month, year)"
        - name: TimeShift
          in: query
          schema:
            type: string
          description: Time shift for the interval
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/graphstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/listrecipient:
    get:
      tags:
        - Contacts
      summary: Contact subscriptions to mailing lists.
      description: Manage the relationship between a contact and a contactslists.
      operationId: get_v3_listrecipient
      parameters:
        - name: Active
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsActive property matches the specified value.
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: "Retrieve only list recipients for which the contact's IsBlocked property matches the specified value."
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve listrecipient resources for which Contact ID equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: "Retrieve only list recipients for which the contact's Email  property matches the specified value."
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Retrieve only list recipients for the specified contact list.
        - name: IgnoreDeleted
          in: query
          schema:
            type: boolean
          description: Remove deleted contacts from the resultset
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: ""
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Timestamp of last registered activity for this ListRecipient.
        - name: ListName
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the specified contact list.
        - name: Opened
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the contact has at least an opened email.
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the given status.
        - name: Unsub
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsUnsubscribed property matches the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listrecipientResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Contact subscriptions to mailing lists.
      description: Manage the relationship between a contact and a contactslists.
      operationId: delete_v3_listrecipient
      parameters:
        - name: Active
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsActive property matches the specified value.
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: "Retrieve only list recipients for which the contact's IsBlocked property matches the specified value."
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve listrecipient resources for which Contact ID equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: "Retrieve only list recipients for which the contact's Email  property matches the specified value."
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Retrieve only list recipients for the specified contact list.
        - name: IgnoreDeleted
          in: query
          schema:
            type: boolean
          description: Remove deleted contacts from the resultset
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: ""
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Timestamp of last registered activity for this ListRecipient.
        - name: ListName
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the specified contact list.
        - name: Opened
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the contact has at least an opened email.
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the given status.
        - name: Unsub
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsUnsubscribed property matches the specified value.
      responses:
        "204":
          description: listrecipient deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Contact subscriptions to mailing lists.
      description: Manage the relationship between a contact and a contactslists.
      operationId: post_v3_listrecipient
      parameters:
        - name: Active
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsActive property matches the specified value.
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: "Retrieve only list recipients for which the contact's IsBlocked property matches the specified value."
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve listrecipient resources for which Contact ID equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: "Retrieve only list recipients for which the contact's Email  property matches the specified value."
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Retrieve only list recipients for the specified contact list.
        - name: IgnoreDeleted
          in: query
          schema:
            type: boolean
          description: Remove deleted contacts from the resultset
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: ""
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Timestamp of last registered activity for this ListRecipient.
        - name: ListName
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the specified contact list.
        - name: Opened
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the contact has at least an opened email.
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the given status.
        - name: Unsub
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsUnsubscribed property matches the specified value.
      responses:
        "201":
          description: listrecipient created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listrecipientResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Contact subscriptions to mailing lists.
      description: Manage the relationship between a contact and a contactslists.
      operationId: put_v3_listrecipient
      parameters:
        - name: Active
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsActive property matches the specified value.
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: "Retrieve only list recipients for which the contact's IsBlocked property matches the specified value."
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve listrecipient resources for which Contact ID equals the specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: "Retrieve only list recipients for which the contact's Email  property matches the specified value."
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Retrieve only list recipients for the specified contact list.
        - name: IgnoreDeleted
          in: query
          schema:
            type: boolean
          description: Remove deleted contacts from the resultset
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: ""
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Timestamp of last registered activity for this ListRecipient.
        - name: ListName
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the specified contact list.
        - name: Opened
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the contact has at least an opened email.
        - name: Status
          in: query
          schema:
            type: string
          description: Retrieve only list recipients for the given status.
        - name: Unsub
          in: query
          schema:
            type: boolean
          description: Retrieve only list recipients for which the IsUnsubscribed property matches the specified value.
      responses:
        "200":
          description: listrecipient updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listrecipientResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/listrecipient/{listrecipient_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific listrecipient by ID
      description: Retrieve a single listrecipient resource by its ID
      operationId: get_v3_listrecipient_id
      parameters:
        - name: listrecipient_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listrecipientResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/listrecipientstatistics:
    get:
      tags:
        - Statistics
      summary: Engagement metrics for list subscribers.
      description: View statistics on Messages sent to the recipients of a given list.
      operationId: get_v3_listrecipientstatistics
      parameters:
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have blocked messages.
        - name: Bounced
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have bounced messages.
        - name: Click
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have clicks registered for messages.
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve ListRecipients for the indicated Contact ID.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve ListRecipients for the indicated ContactsList ID.
        - name: DateFormat
          in: query
          schema:
            type: string
          description: ""
        - name: HardBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: Only retrieve listrecipientstatistics resources for which ListRecipient.IsActive equals the specified value.
        - name: IsExcludedFromCampaigns
          in: query
          schema:
            type: boolean
          description: Only retrieve listrecipientstatistics resources for which IsExcludedFromCampaigns equals the specified value.=
        - name: IsUnsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve listrecipientstatistics resources for which ListRecipient.IsUnsubscribed equals the specified value.
        - name: LastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve Contactstatistics resources for which LastActivityAt equals the specified value.
        - name: MaxLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve ListRecipient that have LastActivityAt less than this value.
        - name: MaxUnsubscribedAt
          in: query
          schema:
            type: string
          description: Only retrieve listrecipientstatistics resources for which ListRecipient.UnsubscribedAt is strictly less than the specified value.
        - name: MinLastActivityAt
          in: query
          schema:
            type: string
          description: Only retrieve ListRecipient that have LastActivityAt larger than this value.
        - name: MinUnsubscribedAt
          in: query
          schema:
            type: string
          description: Only retrieve listrecipientstatistics resources for which ListRecipient.UnsubscribedAt is greater than or equal to the specified value.
        - name: Open
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have opens registered for messages.
        - name: Queued
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have queued messages.
        - name: Sent
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have sent messages.
        - name: ShowExtraData
          in: query
          schema:
            type: boolean
          description: Show extra data associated with contact. Default is not to show extra data.
        - name: SoftBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Spam
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipient that have spam complaints.
        - name: TimeZone
          in: query
          schema:
            type: string
          description: ""
        - name: Unsubscribed
          in: query
          schema:
            type: boolean
          description: Only retrieve ListRecipienttatistics resources for which Unsubscribed is nonzero.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listrecipientstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/liststatistics:
    get:
      tags:
        - Legacy
        - Statistics
      summary: Performance metrics for contact lists.
      description: View Campaign/message/click statistics grouped by ContactsList.
      operationId: get_v3_liststatistics
      parameters:
        - name: Address
          in: query
          schema:
            type: string
          description: Filter list address.
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: ""
        - name: Bounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: CalcActive
          in: query
          schema:
            type: boolean
          description: Should the ActiveCount property be calculated?
        - name: CalcActiveExcludedSubscriber
          in: query
          schema:
            type: boolean
          description: Control the processing of the ActiveExcludedSubscriberCount property. Processed only when set to true.
        - name: CalcActiveUnsub
          in: query
          schema:
            type: boolean
          description: Should the ActiveUnsubscribedCount property be calculated?
        - name: CalcExcludedSubscriber
          in: query
          schema:
            type: boolean
          description: Control the processing of the ExcludedSubscriberCount property. Processed only when set to true.
        - name: Click
          in: query
          schema:
            type: boolean
          description: ""
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: Only retrieve ListStatistics resources for the specified contact list.
        - name: ExcludeID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: HardBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve ListStatistics resources for which IsDeleted equals the specified value.
        - name: MaxLastActivityAt
          in: query
          schema:
            type: string
          description: ""
        - name: MinLastActivityAt
          in: query
          schema:
            type: string
          description: ""
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve ListStatistics resources for which Name equals the specified value.
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: Open
          in: query
          schema:
            type: boolean
          description: ""
        - name: Queued
          in: query
          schema:
            type: boolean
          description: ""
        - name: Sent
          in: query
          schema:
            type: boolean
          description: ""
        - name: SoftBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Spam
          in: query
          schema:
            type: boolean
          description: ""
        - name: Unsubscribed
          in: query
          schema:
            type: boolean
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/liststatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/liststatistics/{liststatistics_ID}":
    get:
      tags:
        - Legacy
        - Statistics
      summary: Get a specific liststatistics by ID
      description: Retrieve a single liststatistics resource by its ID
      operationId: get_v3_liststatistics_id
      parameters:
        - name: liststatistics_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/liststatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/message:
    get:
      tags:
        - Messages
      summary: Individual email details and delivery status.
      description: Allows you to list and view the details of a Message (an e-mail) processed by Mailjet
      operationId: get_v3_message
      parameters:
        - name: BounceReason
          in: query
          schema:
            type: string
          description: ""
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve message resources for which Campaign ID equals the specified value.
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: ""
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve message resources for which Contact ID equals the specified value.
        - name: ContactAlt
          in: query
          schema:
            type: string
          description: ""
        - name: ContactID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomID
          in: query
          schema:
            type: string
          description: ""
        - name: Destination
          in: query
          schema:
            type: integer
          description: Only retrieve message resources for which Destination ID equals the specified value.
        - name: From
          in: query
          schema:
            type: string
          description: ""
        - name: FromDomain
          in: query
          schema:
            type: string
          description: ""
        - name: FromID
          in: query
          schema:
            type: integer
          description: Filter the dataset on messages sent from the given ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: ""
        - name: FromType
          in: query
          schema:
            type: string
          description: ""
        - name: MessageState
          in: query
          schema:
            type: integer
          description: Only show messages with this state.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: ""
        - name: PlanSubscription
          in: query
          schema:
            type: integer
          description: Only retrieve message resources for which PlanSubscription ID equals the specified value.
        - name: Sender
          in: query
          schema:
            type: integer
          description: Deprecrated - Only show messages from this sender.
        - name: SenderID
          in: query
          schema:
            type: integer
          description: Filter the dataset on messages sent using a sender address with the given ID.
        - name: ShowContactAlt
          in: query
          schema:
            type: boolean
          description: ""
        - name: ShowCustomID
          in: query
          schema:
            type: boolean
          description: ""
        - name: ShowSubject
          in: query
          schema:
            type: boolean
          description: ""
        - name: ToTS
          in: query
          schema:
            type: string
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/message/{message_ID}":
    get:
      tags:
        - Messages
      summary: Get a specific message by ID
      description: Retrieve a single message resource by its ID
      operationId: get_v3_message_id
      parameters:
        - name: message_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/messagehistory:
    get:
      tags:
        - Messages
      summary: Timeline of email delivery events.
      description: Event history of a message.
      operationId: get_v3_messagehistory
      parameters:
        - name: Message
          in: query
          schema:
            type: integer
          description: ID of message for which to show the history.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagehistoryResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/messageinformation:
    get:
      tags:
        - Messages
      summary: Message details associated with campaigns.
      description: API Key campaign/message information.
      operationId: get_v3_messageinformation
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageinformationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/messageinformation/{messageinformation_ID}":
    get:
      tags:
        - Messages
      summary: Get a specific messageinformation by ID
      description: Retrieve a single messageinformation resource by its ID
      operationId: get_v3_messageinformation_id
      parameters:
        - name: messageinformation_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messageinformationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/messagesentstatistics:
    get:
      tags:
        - Legacy
        - Messages
        - Statistics
      summary: Performance metrics for individual sent emails.
      description: API Key Statistical campaign/message data.
      operationId: get_v3_messagesentstatistics
      parameters:
        - name: AllMessages
          in: query
          schema:
            type: boolean
          description: "Retrieve all messages. Normally, only the first message of each campaign is retrieved."
        - name: BounceEventFromTs
          in: query
          schema:
            type: string
          description: Minimum value of BounceDate
        - name: BounceEventToTs
          in: query
          schema:
            type: string
          description: Maximum value of BounceDate
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with Status equal to specified value.
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve messagesentstatistics resources for which Contact equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: CustomID
          in: query
          schema:
            type: string
          description: Returns messages tagged with a given CustomID
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with Status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ProcessEmailAutomationRelations
          in: query
          schema:
            type: boolean
          description: ""
        - name: RawData
          in: query
          schema:
            type: boolean
          description: Works toghether with AllMessages. If both are True the method returns only the most important data to reduce database load
        - name: ShowExtraData
          in: query
          schema:
            type: boolean
          description: "Fills the values for BounceDate, BounceReason, FBLSource and ComplaintDate"
        - name: SpamEventFromTs
          in: query
          schema:
            type: string
          description: Maximum value of Complaintdate
        - name: SpamEventToTs
          in: query
          schema:
            type: string
          description: Maximum value of ComplaintDate
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: Only retrieve messagesentstatistics resources for which WorkflowID equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagesentstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/messagesentstatistics/{messagesentstatistics_ID}":
    get:
      tags:
        - Legacy
        - Messages
        - Statistics
      summary: Get a specific messagesentstatistics by ID
      description: Retrieve a single messagesentstatistics resource by its ID
      operationId: get_v3_messagesentstatistics_id
      parameters:
        - name: messagesentstatistics_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagesentstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/messagestate:
    get:
      tags:
        - Messages
      summary: Status codes for email processing stages.
      description: Message state reference.
      operationId: get_v3_messagestate
      parameters:
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagestateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/messagestate/{messagestate_ID}":
    get:
      tags:
        - Messages
      summary: Get a specific messagestate by ID
      description: Retrieve a single messagestate resource by its ID
      operationId: get_v3_messagestate_id
      parameters:
        - name: messagestate_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagestateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/messagestatistics:
    get:
      tags:
        - Legacy
        - Messages
        - Statistics
      summary: Aggregated email campaign performance metrics.
      description: API key Campaign/Message statistics.
      operationId: get_v3_messagestatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactEmail
          in: query
          schema:
            type: string
          description: Only retrieve message statistics for this contact email address.
        - name: ContactID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: ContactListID
          in: query
          schema:
            type: integer
          description: Only retrieve message statistics for this contact list
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve messagestatistics resources for which ContactsList equals the specified value.=
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ProcessTotalClicksCount
          in: query
          schema:
            type: boolean
          description: Process and return the total number of click events for each message.
        - name: ProcessTotalOpensCount
          in: query
          schema:
            type: boolean
          description: Process and return the total number of open events for each message.
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/messagestatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/metasender:
    get:
      tags:
        - Senders
      summary: Domains authorized for sending email messages.
      description: Management of domains used for sending messages. A domain or address must be registered and validated before being used. See the related Sender object if you wish to register a given e-mail address.
      operationId: get_v3_metasender
      parameters:
        - name: DNS
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which DNS ID equals the specified value.).
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which User ID equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metasenderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Senders
      summary: Domains authorized for sending email messages.
      description: Management of domains used for sending messages. A domain or address must be registered and validated before being used. See the related Sender object if you wish to register a given e-mail address.
      operationId: post_v3_metasender
      parameters:
        - name: DNS
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which DNS ID equals the specified value.).
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which User ID equals the specified value.
      responses:
        "201":
          description: metasender created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metasenderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Senders
      summary: Domains authorized for sending email messages.
      description: Management of domains used for sending messages. A domain or address must be registered and validated before being used. See the related Sender object if you wish to register a given e-mail address.
      operationId: put_v3_metasender
      parameters:
        - name: DNS
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which DNS ID equals the specified value.).
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve metasender resources for which User ID equals the specified value.
      responses:
        "200":
          description: metasender updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metasenderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/metasender/{metasender_ID}":
    get:
      tags:
        - Senders
      summary: Get a specific metasender by ID
      description: Retrieve a single metasender resource by its ID
      operationId: get_v3_metasender_id
      parameters:
        - name: metasender_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metasenderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/myprofile:
    get:
      tags:
        - Settings
      summary: User account and billing information.
      description: "Manage user profile data such as address, payment information etc."
      operationId: get_v3_myprofile
      parameters:
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve myprofile resources for which User equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/myprofileResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Settings
      summary: User account and billing information.
      description: "Manage user profile data such as address, payment information etc."
      operationId: put_v3_myprofile
      parameters:
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve myprofile resources for which User equals the specified value.
      responses:
        "200":
          description: myprofile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/myprofileResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/myprofile/{myprofile_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific myprofile by ID
      description: Retrieve a single myprofile resource by its ID
      operationId: get_v3_myprofile_id
      parameters:
        - name: myprofile_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/myprofileResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/newsletter:
    get:
      tags:
        - Legacy
      summary: Deprecated marketing email campaigns and content.
      description: Newsletter data (deprecated).
      operationId: get_v3_newsletter
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified AXTesting ID
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve Newsletter resources for which Campaign ID equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter resources for which ContactsList ID equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve newsletters delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with edit mode equal to the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter objects which already have a corresponding campaign
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsHandled equal to the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsStarred equal to the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified newsletters.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve newsletters based on this template.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only newsletters with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with this subject.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newsletterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Legacy
      summary: Deprecated marketing email campaigns and content.
      description: Newsletter data (deprecated).
      operationId: post_v3_newsletter
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified AXTesting ID
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve Newsletter resources for which Campaign ID equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter resources for which ContactsList ID equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve newsletters delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with edit mode equal to the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter objects which already have a corresponding campaign
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsHandled equal to the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsStarred equal to the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified newsletters.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve newsletters based on this template.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only newsletters with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with this subject.
      responses:
        "201":
          description: newsletter created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newsletterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Legacy
      summary: Deprecated marketing email campaigns and content.
      description: Newsletter data (deprecated).
      operationId: put_v3_newsletter
      parameters:
        - name: AXTesting
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified AXTesting ID
        - name: Campaign
          in: query
          schema:
            type: integer
          description: Only retrieve Newsletter resources for which Campaign ID equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter resources for which ContactsList ID equals the specified value.
        - name: DeliveredAt
          in: query
          schema:
            type: string
          description: Only retrieve newsletters delivered after this value.
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with edit mode equal to the specified value.
        - name: IsArchived
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter resources for which IsArchived equals the specified value.
        - name: IsCampaign
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletter objects which already have a corresponding campaign
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsHandled
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsHandled equal to the specified value.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve newsletters with IsStarred equal to the specified value.
        - name: Modified
          in: query
          schema:
            type: boolean
          description: Only retrieve modified newsletters.
        - name: NewsLetterTemplate
          in: query
          schema:
            type: integer
          description: Only retrieve newsletters based on this template.
        - name: Segmentation
          in: query
          schema:
            type: integer
          description: Only retrieve newsletter objects with the specified contact list filter ID
        - name: Status
          in: query
          schema:
            type: string
          description: "Comma-separated list of statuses: only newsletters with these statuses are retrieved."
        - name: Subject
          in: query
          schema:
            type: string
          description: Only retrieve newsletters with this subject.
      responses:
        "200":
          description: newsletter updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newsletterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/newsletter/{newsletter_ID}":
    get:
      tags:
        - Legacy
      summary: Get a specific newsletter by ID
      description: Retrieve a single newsletter resource by its ID
      operationId: get_v3_newsletter_id
      parameters:
        - name: newsletter_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newsletterResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/newslettertemplate:
    get:
      tags:
        - Legacy
      summary: Reusable layouts for newsletter creation.
      description: Manages a Newsletter Template Properties.
      operationId: get_v3_newslettertemplate
      parameters:
        - name: IsPublic
          in: query
          schema:
            type: boolean
          description: Only show public newsletter templates.
        - name: NewsLetterTemplateCategory
          in: query
          schema:
            type: integer
          description: Only retrieve templates for this category.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Legacy
      summary: Reusable layouts for newsletter creation.
      description: Manages a Newsletter Template Properties.
      operationId: post_v3_newslettertemplate
      parameters:
        - name: IsPublic
          in: query
          schema:
            type: boolean
          description: Only show public newsletter templates.
        - name: NewsLetterTemplateCategory
          in: query
          schema:
            type: integer
          description: Only retrieve templates for this category.
      responses:
        "201":
          description: newslettertemplate created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Legacy
      summary: Reusable layouts for newsletter creation.
      description: Manages a Newsletter Template Properties.
      operationId: put_v3_newslettertemplate
      parameters:
        - name: IsPublic
          in: query
          schema:
            type: boolean
          description: Only show public newsletter templates.
        - name: NewsLetterTemplateCategory
          in: query
          schema:
            type: integer
          description: Only retrieve templates for this category.
      responses:
        "200":
          description: newslettertemplate updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/newslettertemplate/{newslettertemplate_ID}":
    get:
      tags:
        - Legacy
      summary: Get a specific newslettertemplate by ID
      description: Retrieve a single newslettertemplate resource by its ID
      operationId: get_v3_newslettertemplate_id
      parameters:
        - name: newslettertemplate_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/newslettertemplatecategory:
    get:
      tags:
        - Legacy
      summary: Organizational groupings for newsletters.
      description: Manage categories for your newsletters. Allows you to group newsletters by category.
      operationId: get_v3_newslettertemplatecategory
      parameters:
        - name: Locale
          in: query
          schema:
            type: string
          description: Only retrieve newslettertemplatecategory resources for which Locale equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplatecategoryResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/newslettertemplatecategory/{newslettertemplatecategory_ID}":
    get:
      tags:
        - Legacy
      summary: Get a specific newslettertemplatecategory by ID
      description: Retrieve a single newslettertemplatecategory resource by its ID
      operationId: get_v3_newslettertemplatecategory_id
      parameters:
        - name: newslettertemplatecategory_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/newslettertemplatecategoryResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/openinformation:
    get:
      tags:
        - Message Events
      summary: Data about email open events.
      description: Retrieve informations about messages opened at least once by their recipients.
      operationId: get_v3_openinformation
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: EventFromTs
          in: query
          schema:
            type: string
          description: Minimum value for openAt
        - name: EventToTs
          in: query
          schema:
            type: string
          description: Maximum value for openAt
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageID
          in: query
          schema:
            type: integer
          description: ""
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/openinformationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/openinformation/{openinformation_ID}":
    get:
      tags:
        - Message Events
      summary: Get a specific openinformation by ID
      description: Retrieve a single openinformation resource by its ID
      operationId: get_v3_openinformation_id
      parameters:
        - name: openinformation_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/openinformationResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/openstatistics:
    get:
      tags:
        - Legacy
        - Statistics
      summary: Email open rate analytics.
      description: Retrieve statistics on e-mails opened at least once by their recipients.
      operationId: get_v3_openstatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with status equal to specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: MessageStatus
          in: query
          schema:
            type: string
          description: Only retrieve messages with status equal to specified value.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/openstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/parseroute:
    get:
      tags:
        - Parse API
      summary: Inbound email processing webhook configuration.
      description: Email parsing system that forwards incoming emails to a specified URL endpoint
      operationId: get_v3_parseroute
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve parseroute resources for which APIKey ID equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/parserouteResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Parse API
      summary: Inbound email processing webhook configuration.
      description: Email parsing system that forwards incoming emails to a specified URL endpoint
      operationId: delete_v3_parseroute
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve parseroute resources for which APIKey ID equals the specified value.
      responses:
        "204":
          description: parseroute deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Parse API
      summary: Inbound email processing webhook configuration.
      description: Email parsing system that forwards incoming emails to a specified URL endpoint
      operationId: post_v3_parseroute
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve parseroute resources for which APIKey ID equals the specified value.
      responses:
        "201":
          description: parseroute created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/parserouteResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Parse API
      summary: Inbound email processing webhook configuration.
      description: Email parsing system that forwards incoming emails to a specified URL endpoint
      operationId: put_v3_parseroute
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve parseroute resources for which APIKey ID equals the specified value.
      responses:
        "200":
          description: parseroute updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/parserouteResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/parseroute/{parseroute_ID}":
    get:
      tags:
        - Parse API
      summary: Get a specific parseroute by ID
      description: Retrieve a single parseroute resource by its ID
      operationId: get_v3_parseroute_id
      parameters:
        - name: parseroute_ID
          in: path
          schema:
            type: string
          description: Unique ID of the object
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/parserouteResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/preferences:
    get:
      tags:
        - Settings
      summary: User-specific settings and configuration options.
      description: User preferences in key=value format.
      operationId: get_v3_preferences
      parameters:
        - name: Key
          in: query
          schema:
            type: string
          description: Only retrieve preferences resources for which Key equals the specified value.=
        - name: KeyCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: KeyLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: KeyLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: KeyLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: KeyLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: KeyRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: KeyRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: ShowAllUsers
          in: query
          schema:
            type: boolean
          description: Only retrieve preferences resources for which ShowAllUsers equals the specified value.=
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve preferences resources for which User equals the specified value.
        - name: Value
          in: query
          schema:
            type: string
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/preferencesResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/preferences/{preferences_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific preferences by ID
      description: Retrieve a single preferences resource by its ID
      operationId: get_v3_preferences_id
      parameters:
        - name: preferences_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/preferencesResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/preset:
    get:
      tags:
        - Templates
      summary: Reusable style definitions for emails.
      description: "The preset object contains global and user defined presets (styles) independant from templates or newsletters.Access is similar to template and depends on OwnerType, Owner. No versioning is done. Presets are never referenced by their ID. The preset value is copied into the template or newsletter."
      operationId: get_v3_preset
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which APIKey equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which OwnerType equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which User equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Templates
      summary: Reusable style definitions for emails.
      description: "The preset object contains global and user defined presets (styles) independant from templates or newsletters.Access is similar to template and depends on OwnerType, Owner. No versioning is done. Presets are never referenced by their ID. The preset value is copied into the template or newsletter."
      operationId: delete_v3_preset
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which APIKey equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which OwnerType equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which User equals the specified value.
      responses:
        "204":
          description: preset deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Templates
      summary: Reusable style definitions for emails.
      description: "The preset object contains global and user defined presets (styles) independant from templates or newsletters.Access is similar to template and depends on OwnerType, Owner. No versioning is done. Presets are never referenced by their ID. The preset value is copied into the template or newsletter."
      operationId: post_v3_preset
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which APIKey equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which OwnerType equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which User equals the specified value.
      responses:
        "201":
          description: preset created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Templates
      summary: Reusable style definitions for emails.
      description: "The preset object contains global and user defined presets (styles) independant from templates or newsletters.Access is similar to template and depends on OwnerType, Owner. No versioning is done. Presets are never referenced by their ID. The preset value is copied into the template or newsletter."
      operationId: put_v3_preset
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which APIKey equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve preset resources for which OwnerType equals the specified value.
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve preset resources for which User equals the specified value.
      responses:
        "200":
          description: preset updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/preset/{preset_ID}":
    get:
      tags:
        - Templates
      summary: Get a specific preset by ID
      description: Retrieve a single preset resource by its ID
      operationId: get_v3_preset_id
      parameters:
        - name: preset_ID
          in: path
          schema:
            type: string
          description: The ID of preset
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/presetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/returnpath:
    get:
      tags:
        - Messages
      summary: Custom return-path domain configuration for bounce handling
      description: "Configuration system that defines custom return-path domains for email delivery, allowing customized bounce handling for specific API keys."
      operationId: get_v3_returnpath
      parameters:
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/returnpathResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/returnpath/{returnpath_ID}":
    get:
      tags:
        - Messages
      summary: Get a specific returnpath by ID
      description: Retrieve a single returnpath resource by its ID
      operationId: get_v3_returnpath_id
      parameters:
        - name: returnpath_ID
          in: path
          schema:
            type: string
          description: Unique identifier for this return path configuration.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/returnpathResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/sender:
    get:
      tags:
        - Senders
      summary: Validated email addresses for sending mail.
      description: "Manage an email sender for a single API key. An e-mail address or a complete domain (*) has to be registered and validated before being used to send e-mails. In order to manage a sender available across multiple API keys, see the related MetaSender resource."
      operationId: get_v3_sender
      parameters:
        - name: DnsID
          in: query
          schema:
            type: integer
          description: Only retrieve senders for which DnsID matches the specified value.
        - name: Domain
          in: query
          schema:
            type: string
          description: Only retrieve senders for which the email address domain matches the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Email equals the specified value.
        - name: IsDomainSender
          in: query
          schema:
            type: boolean
          description: ""
        - name: LocalPart
          in: query
          schema:
            type: string
          description: "Only retrieve senders for which the email address' local part matches the specified value."
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Also retrieve sender resources which were deleted.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Status equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/senderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Senders
      summary: Validated email addresses for sending mail.
      description: "Manage an email sender for a single API key. An e-mail address or a complete domain (*) has to be registered and validated before being used to send e-mails. In order to manage a sender available across multiple API keys, see the related MetaSender resource."
      operationId: delete_v3_sender
      parameters:
        - name: DnsID
          in: query
          schema:
            type: integer
          description: Only retrieve senders for which DnsID matches the specified value.
        - name: Domain
          in: query
          schema:
            type: string
          description: Only retrieve senders for which the email address domain matches the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Email equals the specified value.
        - name: IsDomainSender
          in: query
          schema:
            type: boolean
          description: ""
        - name: LocalPart
          in: query
          schema:
            type: string
          description: "Only retrieve senders for which the email address' local part matches the specified value."
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Also retrieve sender resources which were deleted.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Status equals the specified value.
      responses:
        "204":
          description: sender deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Senders
      summary: Validated email addresses for sending mail.
      description: "Manage an email sender for a single API key. An e-mail address or a complete domain (*) has to be registered and validated before being used to send e-mails. In order to manage a sender available across multiple API keys, see the related MetaSender resource."
      operationId: post_v3_sender
      parameters:
        - name: DnsID
          in: query
          schema:
            type: integer
          description: Only retrieve senders for which DnsID matches the specified value.
        - name: Domain
          in: query
          schema:
            type: string
          description: Only retrieve senders for which the email address domain matches the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Email equals the specified value.
        - name: IsDomainSender
          in: query
          schema:
            type: boolean
          description: ""
        - name: LocalPart
          in: query
          schema:
            type: string
          description: "Only retrieve senders for which the email address' local part matches the specified value."
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Also retrieve sender resources which were deleted.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Status equals the specified value.
      responses:
        "201":
          description: sender created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/senderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Senders
      summary: Validated email addresses for sending mail.
      description: "Manage an email sender for a single API key. An e-mail address or a complete domain (*) has to be registered and validated before being used to send e-mails. In order to manage a sender available across multiple API keys, see the related MetaSender resource."
      operationId: put_v3_sender
      parameters:
        - name: DnsID
          in: query
          schema:
            type: integer
          description: Only retrieve senders for which DnsID matches the specified value.
        - name: Domain
          in: query
          schema:
            type: string
          description: Only retrieve senders for which the email address domain matches the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Email equals the specified value.
        - name: IsDomainSender
          in: query
          schema:
            type: boolean
          description: ""
        - name: LocalPart
          in: query
          schema:
            type: string
          description: "Only retrieve senders for which the email address' local part matches the specified value."
        - name: ShowDeleted
          in: query
          schema:
            type: boolean
          description: Also retrieve sender resources which were deleted.
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve sender resources for which Status equals the specified value.
      responses:
        "200":
          description: sender updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/senderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/sender/{sender_ID}":
    get:
      tags:
        - Senders
      summary: Get a specific sender by ID
      description: Retrieve a single sender resource by its ID
      operationId: get_v3_sender_id
      parameters:
        - name: sender_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/senderResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/senderstatistics:
    get:
      tags:
        - Legacy
        - Statistics
      summary: Performance metrics by sender address.
      description: API Key sender email address message/open/click statistical information.
      operationId: get_v3_senderstatistics
      parameters:
        - name: Blocked
          in: query
          schema:
            type: boolean
          description: ""
        - name: Bounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Click
          in: query
          schema:
            type: boolean
          description: ""
        - name: domain
          in: query
          schema:
            type: string
          description: Only retrieve sender statistics for which the sender email address domain matches the specified value.
        - name: Email
          in: query
          schema:
            type: string
          description: "Only retrieve senders statistics for which the sender email address' local part matches the specified value."
        - name: HardBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: MaxLastActivityAt
          in: query
          schema:
            type: string
          description: ""
        - name: MinLastActivityAt
          in: query
          schema:
            type: string
          description: ""
        - name: Open
          in: query
          schema:
            type: boolean
          description: ""
        - name: Queued
          in: query
          schema:
            type: boolean
          description: ""
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve senderstatistics resources for which Sender equals the specified value.
        - name: SenderID
          in: query
          schema:
            type: integer
          description: ""
        - name: Sent
          in: query
          schema:
            type: boolean
          description: ""
        - name: SoftBounced
          in: query
          schema:
            type: boolean
          description: ""
        - name: Spam
          in: query
          schema:
            type: boolean
          description: ""
        - name: Unsubscribed
          in: query
          schema:
            type: boolean
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/senderstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/statcounters:
    get:
      tags:
        - Statistics
      summary: Statistical data for analytics and monitoring.
      description: "Time-series statistical counters for key Mailjet metrics, grouped by API key, campaign, or other sources. Provides granular message and event counts for analytics and monitoring."
      operationId: get_v3_statcounters
      parameters:
        - name: APIKeyID
          in: query
          schema:
            type: integer
          description: "Shortcut: set SourceID to given value and CounterSource to APIkey"
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: "Shortcut:  set SourceID to given value and CounterSource to Campaign"
        - name: CounterResolution
          in: query
          schema:
            type: string
          description: "One of highest, Hour, Day, Lifetime. Equivalent to setting third letter of CounterType."
        - name: CounterSource
          in: query
          schema:
            type: string
          description: "One of 'Campaign' or 'APIKey'. Equivalent to setting first letter of CounterType."
        - name: CounterTiming
          in: query
          schema:
            type: string
          description: One of Message or Event. Equivalent to setting second letter of CounterType.
        - name: CounterType
          in: query
          schema:
            type: string
          description: "Counter type to retrieve. A 3-letter combination of ['C','A'] ['E','M'] ['S','D','H','L']"
        - name: FromTS
          in: query
          schema:
            type: string
          description: Retrieve statistics later than this timestamp. Cannot be set if resolution is lifetime.
        - name: IdentityID
          in: query
          schema:
            type: integer
          description: ""
        - name: SourceIDs
          in: query
          schema:
            type: array
            items:
              type: integer
          description: ""
        - name: ToTS
          in: query
          schema:
            type: string
          description: Retrieve statistics before or equal to this timestamp. Cannot be set if resolution is lifetime. Defaults to current timestamp.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statcountersResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/template:
    get:
      tags:
        - Templates
      summary: Reusable email design templates.
      description: "System that allows creating, storing, and managing reusable HTML/MJML templates for emails."
      operationId: get_v3_template
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which APIKey equals the specified value.
        - name: Categories
          in: query
          schema:
            type: string
          description: List of valid categories. Only retrieve template resources for which Catregories are among the listed/contain all the listed/are contained into the listed (depending of the specified CategoriesSelectionMethod).
        - name: CategoriesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Categories filter's value and the  template's purposes list."
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which EditMode equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which OwnerType equals the specified value.
        - name: Purposes
          in: query
          schema:
            type: string
          description: List of valid purposes. Only retrieve template resources for which Purposes are among the listed/contain all the listed/are contained into the listed (depending of the specified PurposesSelectionMethod).
        - name: PurposesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Purposes filter's value and the  template's purposes list."
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which User equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/templateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Templates
      summary: Reusable email design templates.
      description: "System that allows creating, storing, and managing reusable HTML/MJML templates for emails."
      operationId: delete_v3_template
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which APIKey equals the specified value.
        - name: Categories
          in: query
          schema:
            type: string
          description: List of valid categories. Only retrieve template resources for which Catregories are among the listed/contain all the listed/are contained into the listed (depending of the specified CategoriesSelectionMethod).
        - name: CategoriesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Categories filter's value and the  template's purposes list."
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which EditMode equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which OwnerType equals the specified value.
        - name: Purposes
          in: query
          schema:
            type: string
          description: List of valid purposes. Only retrieve template resources for which Purposes are among the listed/contain all the listed/are contained into the listed (depending of the specified PurposesSelectionMethod).
        - name: PurposesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Purposes filter's value and the  template's purposes list."
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which User equals the specified value.
      responses:
        "204":
          description: template deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Templates
      summary: Reusable email design templates.
      description: "System that allows creating, storing, and managing reusable HTML/MJML templates for emails."
      operationId: post_v3_template
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which APIKey equals the specified value.
        - name: Categories
          in: query
          schema:
            type: string
          description: List of valid categories. Only retrieve template resources for which Catregories are among the listed/contain all the listed/are contained into the listed (depending of the specified CategoriesSelectionMethod).
        - name: CategoriesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Categories filter's value and the  template's purposes list."
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which EditMode equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which OwnerType equals the specified value.
        - name: Purposes
          in: query
          schema:
            type: string
          description: List of valid purposes. Only retrieve template resources for which Purposes are among the listed/contain all the listed/are contained into the listed (depending of the specified PurposesSelectionMethod).
        - name: PurposesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Purposes filter's value and the  template's purposes list."
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which User equals the specified value.
      responses:
        "201":
          description: template created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/templateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Templates
      summary: Reusable email design templates.
      description: "System that allows creating, storing, and managing reusable HTML/MJML templates for emails."
      operationId: put_v3_template
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which APIKey equals the specified value.
        - name: Categories
          in: query
          schema:
            type: string
          description: List of valid categories. Only retrieve template resources for which Catregories are among the listed/contain all the listed/are contained into the listed (depending of the specified CategoriesSelectionMethod).
        - name: CategoriesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Categories filter's value and the  template's purposes list."
        - name: EditMode
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which EditMode equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which Name equals the specified value.
        - name: OwnerType
          in: query
          schema:
            type: string
          description: Only retrieve template resources for which OwnerType equals the specified value.
        - name: Purposes
          in: query
          schema:
            type: string
          description: List of valid purposes. Only retrieve template resources for which Purposes are among the listed/contain all the listed/are contained into the listed (depending of the specified PurposesSelectionMethod).
        - name: PurposesSelectionMethod
          in: query
          schema:
            type: string
          description: "One of the following values: containsany (default) / containsall / issubset. Describes the relation between the Purposes filter's value and the  template's purposes list."
        - name: User
          in: query
          schema:
            type: integer
          description: Only retrieve template resources for which User equals the specified value.
      responses:
        "200":
          description: template updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/templateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/template/{template_ID}":
    get:
      tags:
        - Templates
      summary: Get a specific template by ID
      description: Retrieve a single template resource by its ID
      operationId: get_v3_template_id
      parameters:
        - name: template_ID
          in: path
          schema:
            type: string
          description: The ID of template
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/templateResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/toplinkclicked:
    get:
      tags:
        - Statistics
      summary: Most popular links by click frequency.
      description: Top links clicked historgram.
      operationId: get_v3_toplinkclicked
      parameters:
        - name: ActualClicks
          in: query
          schema:
            type: boolean
          description: When true is specified the actual count of clicks instead the default de-duplicated count will be returned
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns Status equals the specified value.
        - name: Contact
          in: query
          schema:
            type: integer
          description: Only retrieve messages to specified contact.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: Message
          in: query
          schema:
            type: integer
          description: Only retrieve message corresponding to this ID.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/toplinkclickedResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/toplinkclicked/{toplinkclicked_ID}":
    get:
      tags:
        - Statistics
      summary: Get a specific toplinkclicked by ID
      description: Retrieve a single toplinkclicked resource by its ID
      operationId: get_v3_toplinkclicked_id
      parameters:
        - name: toplinkclicked_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/toplinkclickedResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/user:
    get:
      tags:
        - Settings
      summary: Account holders with Mailjet service access.
      description: User account definition for Mailjet.
      operationId: get_v3_user
      parameters:
        - name: IsActivated
          in: query
          schema:
            type: boolean
          description: Only retrieve user resources for which IsActivated equals the specified value.
        - name: NewEmail
          in: query
          schema:
            type: string
          description: Only retrieve user resources for which NewEmail equals the specified value.
        - name: UserName
          in: query
          schema:
            type: string
          description: Only retrieve users where Username matches the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Settings
      summary: Account holders with Mailjet service access.
      description: User account definition for Mailjet.
      operationId: put_v3_user
      parameters:
        - name: IsActivated
          in: query
          schema:
            type: boolean
          description: Only retrieve user resources for which IsActivated equals the specified value.
        - name: NewEmail
          in: query
          schema:
            type: string
          description: Only retrieve user resources for which NewEmail equals the specified value.
        - name: UserName
          in: query
          schema:
            type: string
          description: Only retrieve users where Username matches the specified value.
      responses:
        "200":
          description: user updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/user/{user_ID}":
    get:
      tags:
        - Settings
      summary: Get a specific user by ID
      description: Retrieve a single user resource by its ID
      operationId: get_v3_user_id
      parameters:
        - name: user_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/useractivity:
    get:
      tags:
        - Statistics
      summary: User login and activity tracking metrics
      description: "System for tracking users' login frequency and activity within the Mailjet platform. Provides read-only access to user engagement metrics for administrative purposes."
      operationId: get_v3_useractivity
      parameters:
        - name: ts
          in: query
          schema:
            type: string
          description: Filter activity records by specific timestamp (required if uid not provided).
        - name: uid
          in: query
          schema:
            type: integer
          description: Filter activity records by specific user ID (required if ts not provided).
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/useractivityResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/useragent:
    get:
      tags:
        - Statistics
      summary: Browser and device information for tracking.
      description: Mailjet User Agent definitions. An User Agent is the software used to read an email or to access a clicked link.
      operationId: get_v3_useragent
      parameters:
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/useragentResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/useragent/{useragent_ID}":
    get:
      tags:
        - Statistics
      summary: Get a specific useragent by ID
      description: Retrieve a single useragent resource by its ID
      operationId: get_v3_useragent_id
      parameters:
        - name: useragent_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/useragentResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/useragentstatistics:
    get:
      tags:
        - Statistics
      summary: Email metrics grouped by browser type.
      description: View statistics on User Agents. See total counts or filter per Campaign or Contacts List.API Key message Open/Click statistical data grouped per user agent (browser).
      operationId: get_v3_useragentstatistics
      parameters:
        - name: CampaignID
          in: query
          schema:
            type: integer
          description: Unique numerical ID for this object.
        - name: CampaignStatus
          in: query
          schema:
            type: string
          description: Only retrieve campaigns for which Status equals the specified value.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns sent to specified Contacts list.
        - name: ContactsListID
          in: query
          schema:
            type: integer
          description: ""
        - name: CustomCampaign
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given Custom Value.
        - name: Event
          in: query
          schema:
            type: string
          description: Event source. This is one of open or click.
        - name: ExcludePlatform
          in: query
          schema:
            type: string
          description: Exclude browsers running on this platform from result.
        - name: From
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given From header.
        - name: FromDomain
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with given domain in From header.
        - name: FromID
          in: query
          schema:
            type: integer
          description: Only retrieve campaigns with this sender ID.
        - name: FromTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt after this timestamp.
        - name: FromType
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with FromType equal to specified value.
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns where isDeleted matches the specified value.
        - name: IsNewsletterTool
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were started by the newsletter tool.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: Only retrieve campaigns which were marked as starred.
        - name: Period
          in: query
          schema:
            type: string
          description: "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively."
        - name: Platform
          in: query
          schema:
            type: string
          description: Only retrieve useragentstatistics resources for which Platform equals the specified value.
        - name: ToTS
          in: query
          schema:
            type: string
          description: Only retrieve campaigns with SendStartAt timestamp less than the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/useragentstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/widget:
    get:
      tags:
        - Contacts
      summary: Embeddable signup forms for list subscriptions.
      description: Manage settings for Widgets. Widgets are small registration forms that you may include on your website to ease the process of subscribing to a Contacts List. Mailjet widget definitions.
      operationId: get_v3_widget
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified API Key.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified contacts list.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: ""
        - name: Locale
          in: query
          schema:
            type: string
          description: Only retrieve widget resources for which Locale equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified sender.
        - name: Status
          in: query
          schema:
            type: string
          description: ""
        - name: TemplateID
          in: query
          schema:
            type: integer
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Embeddable signup forms for list subscriptions.
      description: Manage settings for Widgets. Widgets are small registration forms that you may include on your website to ease the process of subscribing to a Contacts List. Mailjet widget definitions.
      operationId: delete_v3_widget
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified API Key.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified contacts list.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: ""
        - name: Locale
          in: query
          schema:
            type: string
          description: Only retrieve widget resources for which Locale equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified sender.
        - name: Status
          in: query
          schema:
            type: string
          description: ""
        - name: TemplateID
          in: query
          schema:
            type: integer
          description: ""
      responses:
        "204":
          description: widget deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Embeddable signup forms for list subscriptions.
      description: Manage settings for Widgets. Widgets are small registration forms that you may include on your website to ease the process of subscribing to a Contacts List. Mailjet widget definitions.
      operationId: post_v3_widget
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified API Key.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified contacts list.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: ""
        - name: Locale
          in: query
          schema:
            type: string
          description: Only retrieve widget resources for which Locale equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified sender.
        - name: Status
          in: query
          schema:
            type: string
          description: ""
        - name: TemplateID
          in: query
          schema:
            type: integer
          description: ""
      responses:
        "201":
          description: widget created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Embeddable signup forms for list subscriptions.
      description: Manage settings for Widgets. Widgets are small registration forms that you may include on your website to ease the process of subscribing to a Contacts List. Mailjet widget definitions.
      operationId: put_v3_widget
      parameters:
        - name: APIKey
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified API Key.
        - name: ContactsList
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified contacts list.
        - name: IsStarred
          in: query
          schema:
            type: boolean
          description: ""
        - name: Locale
          in: query
          schema:
            type: string
          description: Only retrieve widget resources for which Locale equals the specified value.
        - name: Name
          in: query
          schema:
            type: string
          description: ""
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: NameLLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the begining of the data.
        - name: NameLLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the begining of the data.
        - name: NameRLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query with the end of the data.
        - name: NameRLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query with the end of the data.
        - name: Sender
          in: query
          schema:
            type: integer
          description: Only retrieve widgets for the specified sender.
        - name: Status
          in: query
          schema:
            type: string
          description: ""
        - name: TemplateID
          in: query
          schema:
            type: integer
          description: ""
      responses:
        "200":
          description: widget updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/widget/{widget_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific widget by ID
      description: Retrieve a single widget resource by its ID
      operationId: get_v3_widget_id
      parameters:
        - name: widget_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/widgetcustomvalue:
    get:
      tags:
        - Contacts
      summary: Custom configuration for subscription widgets.
      description: Specifics settings for a given Mailjet Widget. See Widget. Mailjet widget settings.
      operationId: get_v3_widgetcustomvalue
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve widgetcustomvalue resources for which Name equals the specified value.
        - name: Widget
          in: query
          schema:
            type: integer
          description: Only retrieve widgetcustomvalue resources for which Widget ID equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetcustomvalueResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Contacts
      summary: Custom configuration for subscription widgets.
      description: Specifics settings for a given Mailjet Widget. See Widget. Mailjet widget settings.
      operationId: delete_v3_widgetcustomvalue
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve widgetcustomvalue resources for which Name equals the specified value.
        - name: Widget
          in: query
          schema:
            type: integer
          description: Only retrieve widgetcustomvalue resources for which Widget ID equals the specified value.
      responses:
        "204":
          description: widgetcustomvalue deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Contacts
      summary: Custom configuration for subscription widgets.
      description: Specifics settings for a given Mailjet Widget. See Widget. Mailjet widget settings.
      operationId: post_v3_widgetcustomvalue
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve widgetcustomvalue resources for which Name equals the specified value.
        - name: Widget
          in: query
          schema:
            type: integer
          description: Only retrieve widgetcustomvalue resources for which Widget ID equals the specified value.
      responses:
        "201":
          description: widgetcustomvalue created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetcustomvalueResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Contacts
      summary: Custom configuration for subscription widgets.
      description: Specifics settings for a given Mailjet Widget. See Widget. Mailjet widget settings.
      operationId: put_v3_widgetcustomvalue
      parameters:
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve widgetcustomvalue resources for which Name equals the specified value.
        - name: Widget
          in: query
          schema:
            type: integer
          description: Only retrieve widgetcustomvalue resources for which Widget ID equals the specified value.
      responses:
        "200":
          description: widgetcustomvalue updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetcustomvalueResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/widgetcustomvalue/{widgetcustomvalue_ID}":
    get:
      tags:
        - Contacts
      summary: Get a specific widgetcustomvalue by ID
      description: Retrieve a single widgetcustomvalue resource by its ID
      operationId: get_v3_widgetcustomvalue_id
      parameters:
        - name: widgetcustomvalue_ID
          in: path
          schema:
            type: string
          description: Unique numerical ID for this object.
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetcustomvalueResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/workflow:
    get:
      tags:
        - Automation
      summary: Automated email sequence based on triggers.
      description: Represents an email automation workflow
      operationId: get_v3_workflow
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: When true will show all deleted workflows
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Name equals the specified value.
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: ShowAll
          in: query
          schema:
            type: boolean
          description: ""
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Status equals the specified value.
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    delete:
      tags:
        - Automation
      summary: Automated email sequence based on triggers.
      description: Represents an email automation workflow
      operationId: delete_v3_workflow
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: When true will show all deleted workflows
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Name equals the specified value.
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: ShowAll
          in: query
          schema:
            type: boolean
          description: ""
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Status equals the specified value.
      responses:
        "204":
          description: workflow deleted successfully
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    post:
      tags:
        - Automation
      summary: Automated email sequence based on triggers.
      description: Represents an email automation workflow
      operationId: post_v3_workflow
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: When true will show all deleted workflows
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Name equals the specified value.
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: ShowAll
          in: query
          schema:
            type: boolean
          description: ""
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Status equals the specified value.
      responses:
        "201":
          description: workflow created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
    put:
      tags:
        - Automation
      summary: Automated email sequence based on triggers.
      description: Represents an email automation workflow
      operationId: put_v3_workflow
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
          description: ""
        - name: IsDeleted
          in: query
          schema:
            type: boolean
          description: When true will show all deleted workflows
        - name: Name
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Name equals the specified value.
        - name: NameCI
          in: query
          schema:
            type: string
          description: The query is case insensitive.
        - name: NameLike
          in: query
          schema:
            type: string
          description: The query is case sensitive and matches the search query anywhere within the data.
        - name: NameLikeCI
          in: query
          schema:
            type: string
          description: The query is case insensitive and matches the search query anywhere within the data.
        - name: ShowAll
          in: query
          schema:
            type: boolean
          description: ""
        - name: Status
          in: query
          schema:
            type: string
          description: Only retrieve Workflow resources for which Status equals the specified value.
      responses:
        "200":
          description: workflow updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  "/v3/REST/workflow/{workflow_ID}":
    get:
      tags:
        - Automation
      summary: Get a specific workflow by ID
      description: Retrieve a single workflow resource by its ID
      operationId: get_v3_workflow_id
      parameters:
        - name: workflow_ID
          in: path
          schema:
            type: string
          description: Unique identifier of the workflow
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
  /v3/REST/workflowstatistics:
    get:
      tags:
        - Statistics
      summary: Performance metrics for workflow engagement and delivery
      description: General statistics about a workflow
      operationId: get_v3_workflowstatistics
      parameters:
        - name: FromTS
          in: query
          schema:
            type: string
          description: ""
        - name: ToTS
          in: query
          schema:
            type: string
          description: ""
        - name: WorkflowID
          in: query
          schema:
            type: integer
          description: ""
        - name: countOnly
          in: query
          schema:
            type: integer
          description: "Set the value of this query parameter to `1` to retrieve the overall number of objects returned by this request for your API Key. No list of results will be returned - the objects will simply be counted. Default value is `0`"
        - name: Limit
          in: query
          schema:
            type: integer
          description: Limit the response to a select number of returned objects.
        - name: Offset
          in: query
          schema:
            type: integer
          description: "Retrieve a list of objects starting from a certain offset. Combine this query parameter with `Limit` to retrieve a specific section of the list of objects."
        - name: Sort
          in: query
          schema:
            type: string
          description: "Specify a property name for this query parameter to sort the objects in `Data`. By default the sorting is ascending. When a property name is postfixed with DESC (i.e. property_name+DESC), the sort order will be descending."
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflowstatisticsResponse"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
      security:
        - basicAuth: []
components:
  schemas:
    activitycountersResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKeyID:
                type: integer
              ContactCount:
                type: integer
              ContactCount2:
                type: integer
              EventCount:
                type: integer
              EventCount2:
                type: integer
              SourceID:
                type: integer
              SourceID2:
                type: integer
              Timeslice:
                type: string
            title: activitycounters
        Total:
          type: integer
          description: Total number of items available
    aggregategraphstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: number
              BlockedStdDev:
                type: number
              BouncedCount:
                type: number
              BouncedStdDev:
                type: number
              CampaignAggregateID:
                type: string
              ClickedCount:
                type: number
              ClickedStdDev:
                type: number
              OpenedCount:
                type: number
              OpenedStdDev:
                type: number
              RefTimestamp:
                type: string
              SentCount:
                type: number
              SentStdDev:
                type: number
              SpamComplaintCount:
                type: number
              SpamcomplaintStdDev:
                type: number
              UnsubscribedCount:
                type: number
              UnsubscribedStdDev:
                type: number
            title: aggregategraphstatistics
        Total:
          type: integer
          description: Total number of items available
    apikeyResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ACL:
                type: string
              APIKey:
                type: string
              CreatedAt:
                type: string
              ID:
                type: integer
              IsActive:
                type: boolean
              IsMaster:
                type: boolean
              Name:
                type: string
              QuarantineValue:
                type: string
              RegionID:
                type: string
              Runlevel:
                type: string
              SecretKey:
                type: string
              TrackHost:
                type: string
              UserID:
                type: string
            required:
              - APIKey
              - Name
            title: apikey
        Total:
          type: integer
          description: Total number of items available
    apikeyaccessResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              AllowedAccess:
                type: string
              CreatedAt:
                type: string
              CustomName:
                type: string
              ID:
                type: integer
              IsActive:
                type: boolean
              LastActivityAt:
                type: string
              RealUser:
                type: string
              Subaccount:
                type: string
              User:
                type: string
            required:
              - APIKey
              - User
            title: apikeyaccess
        Total:
          type: integer
          description: Total number of items available
    apikeyaccessgrantorResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              IsMaster:
                type: boolean
              IsQuarantined:
                type: boolean
              Name:
                type: string
              Senders:
                type: string
            required:
              - APIKey
            title: apikeyaccessgrantor
        Total:
          type: integer
          description: Total number of items available
    apikeytotalsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              LastActivity:
                type: integer
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamcomplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
              WorkFlowExitedCount:
                type: integer
            title: apikeytotals
        Total:
          type: integer
          description: Total number of items available
    apitokenResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ACL:
                type: string
              APIKey:
                type: string
              AllowedAccess:
                type: string
              CatchedIp:
                type: string
              CreatedAt:
                type: string
              FirstUsedAt:
                type: string
              ID:
                type: integer
              IsActive:
                type: boolean
              Lang:
                type: string
              LastUsedAt:
                type: string
              SentData:
                type: string
              Timezone:
                type: string
              Token:
                type: string
              TokenType:
                type: string
              ValidFor:
                type: string
            required:
              - AllowedAccess
              - APIKey
              - TokenType
            title: apitoken
        Total:
          type: integer
          description: Total number of items available
    apppreferencesResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              ID:
                type: integer
              PrefKey:
                type: string
              PrefValue:
                type: string
            required:
              - APIKey
            title: apppreferences
        Total:
          type: integer
          description: Total number of items available
    axtestingResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ContactList:
                type: string
              CreatedAt:
                type: string
              Deleted:
                type: boolean
              ID:
                type: integer
              Mode:
                type: string
              Name:
                type: string
              Percentage:
                type: number
              RemainderAt:
                type: string
              Segmentation:
                type: string
              Starred:
                type: boolean
              StartAt:
                type: string
              Status:
                type: string
              StatusCode:
                type: string
              StatusString:
                type: string
              WinnerClickRate:
                type: number
              WinnerID:
                type: string
              WinnerMethod:
                type: string
              WinnerOpenRate:
                type: number
              WinnerSpamRate:
                type: number
              WinnerUnsubRate:
                type: number
            title: axtesting
        Total:
          type: integer
          description: Total number of items available
    batchjobResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              AliveAt:
                type: integer
              Blocksize:
                type: string
              Count:
                type: string
              Current:
                type: string
              Data:
                type: string
              ErrTreshold:
                type: string
              Errcount:
                type: string
              ID:
                type: integer
              JobEnd:
                type: integer
              JobStart:
                type: integer
              JobType:
                type: string
              Method:
                type: string
              RefId:
                type: integer
              RequestAt:
                type: integer
              Status:
                type: string
              Throttle:
                type: string
            required:
              - Data
              - JobType
            title: batchjob
        Total:
          type: integer
          description: Total number of items available
    bouncestatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BouncedAt:
                type: string
              Campaign:
                type: string
              Contact:
                type: string
              ID:
                type: integer
              IsBlocked:
                type: boolean
              IsStatePermanent:
                type: boolean
              State:
                type: string
            required:
              - Campaign
              - Contact
            title: bouncestatistics
        Total:
          type: integer
          description: Total number of items available
    campaignResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CampaignType:
                type: string
              ClickTracked:
                type: integer
              CreatedAt:
                type: string
              CustomValue:
                type: string
              FirstMessageID:
                type: integer
              From:
                type: string
              FromEmail:
                type: string
              FromName:
                type: string
              HasHtmlCount:
                type: integer
              HasTxtCount:
                type: integer
              ID:
                type: integer
              IsDeleted:
                type: boolean
              IsStarred:
                type: boolean
              List:
                type: string
              NewsLetterID:
                type: integer
              OpenTracked:
                type: integer
              Segmentation:
                type: string
              SendEndAt:
                type: string
              SendStartAt:
                type: string
              SpamassScore:
                type: string
              Status:
                type: string
              Subject:
                type: string
              UnsubscribeTrackedCount:
                type: integer
              Workflow:
                type: string
            required:
              - FromEmail
            title: campaign
        Total:
          type: integer
          description: Total number of items available
    campaignaggregateResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CampaignIDS:
                type: string
              ContactFilter:
                type: string
              ContactsList:
                type: string
              Final:
                type: boolean
              FromDate:
                type: string
              ID:
                type: integer
              Keyword:
                type: string
              Name:
                type: string
              Sender:
                type: string
              ToDate:
                type: string
            title: campaignaggregate
        Total:
          type: integer
          description: Total number of items available
    campaigndraftResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AXFraction:
                type: number
              AXFractionName:
                type: string
              AXTesting:
                type: string
              Campaign:
                type: string
              ContactsList:
                type: string
              CreatedAt:
                type: string
              Current:
                type: integer
              DeliveredAt:
                type: string
              EditMode:
                type: string
              ID:
                type: integer
              IsCampaignTemplate:
                type: boolean
              IsStarred:
                type: boolean
              IsTextPartIncluded:
                type: boolean
              Locale:
                type: string
              ModifiedAt:
                type: string
              Preset:
                type: string
              ReplyEmail:
                type: string
              Segmentation:
                type: string
              Sender:
                type: string
              SenderEmail:
                type: string
              SenderName:
                type: string
              Status:
                type: string
              Subject:
                type: string
              Template:
                type: string
              Title:
                type: string
              Url:
                type: string
              Used:
                type: boolean
              VarCount:
                type: string
            required:
              - Locale
              - Sender
              - SenderEmail
              - Subject
            title: campaigndraft
        Total:
          type: integer
          description: Total number of items available
    campaigngraphstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Clickcount:
                type: integer
              ID:
                type: integer
              Opencount:
                type: integer
              Spamcount:
                type: integer
              Tick:
                type: integer
              Unsubcount:
                type: integer
            title: campaigngraphstatistics
        Total:
          type: integer
          description: Total number of items available
    campaignoverviewResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ClickedCount:
                type: integer
              DeliveredCount:
                type: integer
              EditMode:
                type: string
              EditType:
                type: string
              ID:
                type: integer
              IDType:
                type: string
              OpenedCount:
                type: integer
              ProcessedCount:
                type: integer
              SendTimeStart:
                type: integer
              Starred:
                type: boolean
              Status:
                type: string
              Subject:
                type: string
              Title:
                type: string
            title: campaignoverview
        Total:
          type: integer
          description: Total number of items available
    campaignstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AXTesting:
                type: string
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              Campaign:
                type: string
              CampaignIsStarred:
                type: boolean
              CampaignSendStartAt:
                type: string
              CampaignSubject:
                type: string
              ClickedCount:
                type: integer
              ContactListName:
                type: string
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              LastActivityAt:
                type: string
              NewsLetter:
                type: string
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SegmentName:
                type: string
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
              WorkFlowExitedCount:
                type: integer
              Workflow:
                type: string
            title: campaignstatistics
        Total:
          type: integer
          description: Total number of items available
    clickstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ClickedAt:
                type: string
              ClickedDelay:
                type: integer
              Contact:
                type: string
              ID:
                type: integer
              Message:
                type: string
              Url:
                type: string
              UserAgent:
                type: string
            required:
              - Contact
              - Message
              - Url
              - UserAgent
            title: clickstatistics
        Total:
          type: integer
          description: Total number of items available
    contactResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CreatedAt:
                type: string
              DeliveredCount:
                type: integer
              Email:
                type: string
              ExclusionFromCampaignsUpdatedAt:
                type: string
              ID:
                type: integer
              IsExcludedFromCampaigns:
                type: boolean
              IsOptInPending:
                type: boolean
              IsSpamComplaining:
                type: boolean
              LastActivityAt:
                type: string
              LastUpdateAt:
                type: string
              Name:
                type: string
              UnsubscribedAt:
                type: string
              UnsubscribedBy:
                type: string
            required:
              - Email
            title: contact
        Total:
          type: integer
          description: Total number of items available
    contactactivityResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Activity:
                type: string
              ContactId:
                type: integer
              CreatedAt:
                type: integer
              Details:
                type: string
              EventGuid:
                type: string
              Geo:
                type: string
              ID:
                type: integer
              Ip:
                type: string
              SourceId:
                type: integer
            title: contactactivity
        Total:
          type: integer
          description: Total number of items available
    contactdataResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ContactID:
                type: integer
              Data:
                type: string
              ID:
                type: integer
              MethodCollection:
                type: string
            title: contactdata
        Total:
          type: integer
          description: Total number of items available
    contactfilterResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Description:
                type: string
              Expression:
                type: string
              ID:
                type: integer
              Name:
                type: string
              Status:
                type: string
            title: contactfilter
        Total:
          type: integer
          description: Total number of items available
    contacthistorydataResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Contact:
                type: string
              CreatedAt:
                type: string
              Data:
                type: string
              ID:
                type: integer
              Name:
                type: string
            title: contacthistorydata
        Total:
          type: integer
          description: Total number of items available
    contactmetadataResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Datatype:
                type: string
              ID:
                type: integer
              Name:
                type: string
              NameSpace:
                type: string
            required:
              - Datatype
              - Name
              - NameSpace
            title: contactmetadata
        Total:
          type: integer
          description: Total number of items available
    contactslistResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Address:
                type: string
              CreatedAt:
                type: string
              ID:
                type: integer
              IsDeleted:
                type: boolean
              Name:
                type: string
              SubscriberCount:
                type: string
            title: contactslist
        Total:
          type: integer
          description: Total number of items available
    contactslistsignupResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ConfirmAt:
                type: integer
              ConfirmIp:
                type: string
              ConsentID:
                type: integer
              Contact:
                type: string
              Email:
                type: string
              ID:
                type: integer
              List:
                type: string
              Properties:
                type: string
              SignupAt:
                type: integer
              SignupIp:
                type: string
              SignupKey:
                type: string
              Source:
                type: string
              SourceId:
                type: integer
              ValidationResponse:
                type: string
            required:
              - Email
              - List
              - Source
            title: contactslistsignup
        Total:
          type: integer
          description: Total number of items available
    contactstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              Contact:
                type: string
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              LastActivityAt:
                type: string
              MarketingContacts:
                type: integer
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
              UserMarketingContacts:
                type: integer
              WorkFlowExitedCount:
                type: integer
            title: contactstatistics
        Total:
          type: integer
          description: Total number of items available
    csvimportResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AliveAt:
                type: string
              ContactsList:
                type: string
              Count:
                type: string
              Current:
                type: string
              DataID:
                type: integer
              ErrTreshold:
                type: string
              Errcount:
                type: string
              ID:
                type: integer
              ImportOptions:
                type: string
              JobEnd:
                type: string
              JobStart:
                type: string
              Method:
                type: string
              RequestAt:
                type: string
              Status:
                type: string
            required:
              - ContactsList
              - DataID
            title: csvimport
        Total:
          type: integer
          description: Total number of items available
    dnsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              DKIMRecordName:
                type: string
              DKIMRecordValue:
                type: string
              DKIMStatus:
                type: string
              Domain:
                type: string
              ID:
                type: integer
              IsCheckInProgress:
                type: boolean
              LastCheckAt:
                type: string
              OwnerShipToken:
                type: string
              OwnerShipTokenRecordName:
                type: string
              SPFRecordValue:
                type: string
              SPFStatus:
                type: string
            required:
              - Domain
            title: dns
        Total:
          type: integer
          description: Total number of items available
    domainstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              DeliveredCount:
                type: integer
              Domain:
                type: string
              ID:
                type: integer
              OpenedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
            title: domainstatistics
        Total:
          type: integer
          description: Total number of items available
    eventcallbackurlResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              AccountID:
                type: string
              EventType:
                type: string
              ID:
                type: integer
              IsBackup:
                type: boolean
              ProjectID:
                type: string
              QueueName:
                type: string
              Region:
                type: string
              Resource:
                type: string
              SharedAccessSignature:
                type: string
              Status:
                type: string
              Topic:
                type: string
              Url:
                type: string
              Version:
                type: string
            required:
              - APIKey
              - Url
            title: eventcallbackurl
        Total:
          type: integer
          description: Total number of items available
    geostatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ClickedCount:
                type: integer
              Country:
                type: string
              OpenedCount:
                type: integer
            title: geostatistics
        Total:
          type: integer
          description: Total number of items available
    graphstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              OpenedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              RefTimestamp:
                type: string
              SendtimeStart:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamcomplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
            title: graphstatistics
        Total:
          type: integer
          description: Total number of items available
    listrecipientResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Contact:
                type: string
              ID:
                type: integer
              IsActive:
                type: boolean
              IsUnsubscribed:
                type: boolean
              List:
                type: string
              SubscribedAt:
                type: string
              UnsubscribedAt:
                type: string
            required:
              - Contact
              - List
            title: listrecipient
        Total:
          type: integer
          description: Total number of items available
    listrecipientstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              Data:
                type: string
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              LastActivityAt:
                type: string
              ListRecipient:
                type: string
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
              WorkFlowExitedCount:
                type: integer
            title: listrecipientstatistics
        Total:
          type: integer
          description: Total number of items available
    liststatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ActiveCount:
                type: integer
              ActiveExcludedSubscriberCount:
                type: integer
              ActiveUnsubscribedCount:
                type: integer
              Address:
                type: string
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              CreatedAt:
                type: string
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              ExcludedSubscriberCount:
                type: integer
              HardBouncedCount:
                type: integer
              ID:
                type: integer
              IsDeleted:
                type: boolean
              LastActivityAt:
                type: string
              Name:
                type: string
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              SubscriberCount:
                type: string
              UnsubscribedCount:
                type: integer
              WorkFlowExitedCount:
                type: integer
            title: liststatistics
        Total:
          type: integer
          description: Total number of items available
    messageResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ArrivedAt:
                type: string
              AttachmentCount:
                type: string
              AttemptCount:
                type: string
              Campaign:
                type: string
              Contact:
                type: string
              ContactAlt:
                type: string
              CustomID:
                type: string
              Delay:
                type: string
              Destination:
                type: string
              FilterTime:
                type: string
              From:
                type: string
              ID:
                type: integer
              IsClickTracked:
                type: boolean
              IsHTMLPartIncluded:
                type: boolean
              IsOpenTracked:
                type: boolean
              IsTextPartIncluded:
                type: boolean
              IsUnsubTracked:
                type: boolean
              MessageSize:
                type: integer
              Sender:
                type: string
              SpamassRules:
                type: string
              SpamassassinScore:
                type: string
              State:
                type: string
              StatePermanent:
                type: boolean
              Status:
                type: string
              Subject:
                type: string
              UUID:
                type: string
            required:
              - Campaign
              - Contact
              - Destination
              - From
            title: message
        Total:
          type: integer
          description: Total number of items available
    messagehistoryResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Comment:
                type: string
              EventAt:
                type: integer
              EventType:
                type: string
              State:
                type: string
              Useragent:
                type: string
              UseragentID:
                type: string
            title: messagehistory
        Total:
          type: integer
          description: Total number of items available
    messageinformationResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Campaign:
                type: string
              ClickTrackedCount:
                type: integer
              Contact:
                type: string
              CreatedAt:
                type: string
              ID:
                type: integer
              MessageSize:
                type: integer
              OpenTrackedCount:
                type: integer
              QueuedCount:
                type: integer
              SendEndAt:
                type: string
              SentCount:
                type: integer
              SpamAssassinRules:
                type: string
              SpamAssassinScore:
                type: string
            title: messageinformation
        Total:
          type: integer
          description: Total number of items available
    messagesentstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ArrivalTs:
                type: string
              Blocked:
                type: boolean
              Bounce:
                type: boolean
              BounceDate:
                type: string
              BounceReason:
                type: string
              Campaign:
                type: string
              Click:
                type: boolean
              CntRecipients:
                type: integer
              ComplaintDate:
                type: string
              Contact:
                type: string
              Details:
                type: string
              FBLSource:
                type: string
              MessageID:
                type: integer
              Open:
                type: boolean
              Queued:
                type: boolean
              Sent:
                type: boolean
              Spam:
                type: boolean
              State:
                type: string
              StatePermanent:
                type: boolean
              Status:
                type: string
              ToEmail:
                type: string
              Unsub:
                type: boolean
              Workflow:
                type: string
            required:
              - Campaign
              - Contact
              - State
            title: messagesentstatistics
        Total:
          type: integer
          description: Total number of items available
    messagestateResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ID:
                type: integer
              RelatedTo:
                type: string
              State:
                type: string
            required:
              - State
            title: messagestate
        Total:
          type: integer
          description: Total number of items available
    messagestatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AverageClickDelay:
                type: number
              AverageClickedCount:
                type: number
              AverageOpenDelay:
                type: number
              AverageOpenedCount:
                type: number
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              CampaignCount:
                type: integer
              ClickedCount:
                type: integer
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              OpenedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              TotalClicksCount:
                type: integer
              TotalOpensCount:
                type: integer
              TransactionalCount:
                type: integer
              UnsubscribedCount:
                type: integer
            title: messagestatistics
        Total:
          type: integer
          description: Total number of items available
    metasenderResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CreatedAt:
                type: string
              Description:
                type: string
              Email:
                type: string
              Filename:
                type: string
              ID:
                type: integer
              IsEnabled:
                type: boolean
            required:
              - Email
            title: metasender
        Total:
          type: integer
          description: Total number of items available
    myprofileResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AddressCity:
                type: string
              AddressCountry:
                type: string
              AddressPostalCode:
                type: string
              AddressState:
                type: string
              AddressStreet:
                type: string
              BillingEmail:
                type: string
              BirthdayAt:
                type: string
              CompanyName:
                type: string
              CompanyNumOfEmployees:
                type: string
              ContactPhone:
                type: string
              EstimatedVolume:
                type: string
              Features:
                type: string
              Firstname:
                type: string
              ID:
                type: integer
              Industry:
                type: string
              JobTitle:
                type: string
              Lastname:
                type: string
              User:
                type: string
              VAT:
                type: string
              VATNumber:
                type: string
              Website:
                type: string
            title: myprofile
        Total:
          type: integer
          description: Total number of items available
    newsletterResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AXFraction:
                type: number
              AXFractionName:
                type: string
              AXTesting:
                type: string
              Callback:
                type: string
              Campaign:
                type: string
              ContactsList:
                type: string
              CreatedAt:
                type: string
              DeliveredAt:
                type: string
              EditMode:
                type: string
              EditType:
                type: string
              Footer:
                type: string
              FooterAddress:
                type: string
              FooterWYSIWYGType:
                type: string
              HeaderFilename:
                type: string
              HeaderLink:
                type: string
              HeaderText:
                type: string
              HeaderUrl:
                type: string
              ID:
                type: integer
              Ip:
                type: string
              IsHandled:
                type: boolean
              IsStarred:
                type: boolean
              IsTextPartIncluded:
                type: boolean
              Locale:
                type: string
              ModifiedAt:
                type: string
              Permalink:
                type: string
              PermalinkHost:
                type: string
              PermalinkWYSIWYGType:
                type: string
              PolitenessMode:
                type: string
              ReplyEmail:
                type: string
              Segmentation:
                type: string
              Sender:
                type: string
              SenderEmail:
                type: string
              SenderName:
                type: string
              Status:
                type: string
              Subject:
                type: string
              Template:
                type: string
              TestAddress:
                type: string
              Title:
                type: string
              Url:
                type: string
            required:
              - Locale
              - Sender
              - SenderEmail
              - Subject
            title: newsletter
        Total:
          type: integer
          description: Total number of items available
    newslettertemplateResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Category:
                type: string
              CreatedAt:
                type: string
              Footer:
                type: string
              FooterAddress:
                type: string
              FooterWYSIWYGType:
                type: string
              HeaderFilename:
                type: string
              HeaderLink:
                type: string
              HeaderText:
                type: string
              HeaderUrl:
                type: string
              ID:
                type: integer
              Locale:
                type: string
              Name:
                type: string
              Permalink:
                type: string
              PermalinkWYSIWYGType:
                type: string
              SourceNewsLetterID:
                type: integer
              Status:
                type: string
            required:
              - Locale
            title: newslettertemplate
        Total:
          type: integer
          description: Total number of items available
    newslettertemplatecategoryResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Description:
                type: string
              ID:
                type: integer
              Locale:
                type: string
              ParentCategory:
                type: string
              Value:
                type: string
            required:
              - Description
              - Locale
              - ParentCategory
              - Value
            title: newslettertemplatecategory
        Total:
          type: integer
          description: Total number of items available
    openinformationResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ArrivedAt:
                type: string
              Campaign:
                type: string
              Contact:
                type: string
              ID:
                type: integer
              MessageID:
                type: integer
              OpenedAt:
                type: string
              UserAgent:
                type: string
              UserAgentFull:
                type: string
            required:
              - Campaign
              - Contact
            title: openinformation
        Total:
          type: integer
          description: Total number of items available
    openstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              OpenedCount:
                type: integer
              OpenedDelay:
                type: string
              ProcessedCount:
                type: integer
            title: openstatistics
        Total:
          type: integer
          description: Total number of items available
    parserouteResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              Email:
                type: string
              ID:
                type: integer
              Url:
                type: string
            required:
              - APIKey
              - Email
              - Url
            title: parseroute
        Total:
          type: integer
          description: Total number of items available
    preferencesResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ID:
                type: integer
              Key:
                type: string
              User:
                type: string
              Value:
                type: string
            required:
              - Key
              - User
            title: preferences
        Total:
          type: integer
          description: Total number of items available
    presetResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Author:
                type: string
              Copyright:
                type: string
              Description:
                type: string
              ID:
                type: integer
              Name:
                type: string
              OwnerID:
                type: integer
              OwnerType:
                type: string
              Preset:
                type: string
            title: preset
        Total:
          type: integer
          description: Total number of items available
    returnpathResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AppId:
                type: string
              ReturnPathDomain:
                type: string
            title: returnpath
        Total:
          type: integer
          description: Total number of items available
    senderResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CreatedAt:
                type: string
              DNS:
                type: string
              Email:
                type: string
              EmailType:
                type: string
              Filename:
                type: string
              ID:
                type: integer
              IsDefaultSender:
                type: boolean
              Name:
                type: string
              Status:
                type: string
            required:
              - Email
            title: sender
        Total:
          type: integer
          description: Total number of items available
    senderstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              DeferredCount:
                type: integer
              DeliveredCount:
                type: integer
              HardBouncedCount:
                type: integer
              LastActivityAt:
                type: string
              OpenedCount:
                type: integer
              PreQueuedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              Sender:
                type: string
              SoftBouncedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UnsubscribedCount:
                type: integer
              WorkFlowExitedCount:
                type: integer
            required:
              - Sender
            title: senderstatistics
        Total:
          type: integer
          description: Total number of items available
    statcountersResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKeyID:
                type: integer
              EventClickDelay:
                type: integer
              EventClickedCount:
                type: integer
              EventOpenDelay:
                type: integer
              EventOpenedCount:
                type: integer
              EventSpamCount:
                type: integer
              EventUnsubscribedCount:
                type: integer
              EventWorkflowExitedCount:
                type: integer
              MessageBlockedCount:
                type: integer
              MessageClickedCount:
                type: integer
              MessageDeferredCount:
                type: integer
              MessageHardBouncedCount:
                type: integer
              MessageOpenedCount:
                type: integer
              MessageQueuedCount:
                type: integer
              MessageSentCount:
                type: integer
              MessageSoftBouncedCount:
                type: integer
              MessageSpamCount:
                type: integer
              MessageUnsubscribedCount:
                type: integer
              MessageWorkFlowExitedCount:
                type: integer
              SourceID:
                type: integer
              Timeslice:
                type: string
              Total:
                type: integer
            title: statcounters
        Total:
          type: integer
          description: Total number of items available
    templateResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Author:
                type: string
              Categories:
                type: string
              Copyright:
                type: string
              Description:
                type: string
              EditMode:
                type: string
              ID:
                type: integer
              IsStarred:
                type: boolean
              Locale:
                type: string
              Name:
                type: string
              OwnerId:
                type: string
              OwnerType:
                type: string
              Presets:
                type: string
              Previews:
                type: string
              Purposes:
                type: string
            title: template
        Total:
          type: integer
          description: Total number of items available
    toplinkclickedResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ClickedCount:
                type: integer
              LinkId:
                type: integer
              Url:
                type: string
            title: toplinkclicked
        Total:
          type: integer
          description: Total number of items available
    userResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ACL:
                type: string
              CreatedAt:
                type: string
              Email:
                type: string
              ID:
                type: integer
              LastIp:
                type: string
              LastLoginAt:
                type: string
              Locale:
                type: string
              MaxAllowedAPIKeys:
                type: string
              Timezone:
                type: string
              Username:
                type: string
              WarnedRatelimitAt:
                type: string
            required:
              - LastIp
              - Username
            title: user
        Total:
          type: integer
          description: Total number of items available
    useractivityResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              ts:
                type: string
              uid:
                type: integer
              use:
                type: integer
            title: useractivity
        Total:
          type: integer
          description: Total number of items available
    useragentResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Browser:
                type: string
              ID:
                type: integer
              IsBot:
                type: boolean
              IsMobile:
                type: boolean
              Platform:
                type: string
            required:
              - Browser
            title: useragent
        Total:
          type: integer
          description: Total number of items available
    useragentstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              Count:
                type: integer
              DistinctCount:
                type: integer
              Platform:
                type: string
              UserAgent:
                type: string
            required:
              - Platform
              - UserAgent
            title: useragentstatistics
        Total:
          type: integer
          description: Total number of items available
    widgetResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CreatedAt:
                type: integer
              From:
                type: string
              ID:
                type: integer
              IsStarred:
                type: boolean
              List:
                type: string
              Locale:
                type: string
              ModifiedAt:
                type: integer
              Name:
                type: string
              Replyto:
                type: string
              Sendername:
                type: string
              Status:
                type: string
              Subject:
                type: string
              TemplateID:
                type: integer
            required:
              - From
              - List
              - Locale
            title: widget
        Total:
          type: integer
          description: Total number of items available
    widgetcustomvalueResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              APIKey:
                type: string
              Display:
                type: boolean
              ID:
                type: integer
              Name:
                type: string
              Value:
                type: string
              Widget:
                type: string
            required:
              - Name
              - Widget
            title: widgetcustomvalue
        Total:
          type: integer
          description: Total number of items available
    workflowResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              CreatedAt:
                type: string
              ID:
                type: integer
              IsDeleted:
                type: boolean
              ModifiedAt:
                type: string
              Name:
                type: string
              Status:
                type: string
            title: workflow
        Total:
          type: integer
          description: Total number of items available
    workflowstatisticsResponse:
      type: object
      properties:
        Count:
          type: integer
          description: Number of items in this response
        Data:
          type: array
          items:
            type: object
            properties:
              AutoCleanExitedCount:
                type: integer
              BlockedCount:
                type: integer
              BouncedCount:
                type: integer
              ClickedCount:
                type: integer
              ContactCompletedCount:
                type: integer
              ContactCount:
                type: integer
              ContactUneligibleCount:
                type: integer
              DeliveredCount:
                type: integer
              ExitConditionExitedCount:
                type: integer
              ExitLinkExitedCount:
                type: integer
              ExitedWorkflowCount:
                type: integer
              LastContactEnteredAt:
                type: string
              LastMessageSentAt:
                type: string
              OpenedCount:
                type: integer
              ProcessedCount:
                type: integer
              QueuedCount:
                type: integer
              SpamComplaintCount:
                type: integer
              UserExitedCount:
                type: integer
              WorflowStartedAt:
                type: string
              Workflow:
                type: string
            title: workflowstatistics
        Total:
          type: integer
          description: Total number of items available
  responses:
    "204":
      description: No content found or expected to return.
    "400":
      description: One or more parameters are missing or maybe misspelled (unknown resource or action).
    "401":
      description: You have specified an incorrect API Key / API Secret Key pair. You may be unauthorized to access the API or your API key may be inactive. Visit API keys Management section to check your keys.
    "403":
      description: You are not authorized to access this resource.
    "404":
      description: The resource with the specified ID you are trying to reach does not exist.
    "429":
      description: The resource with the specified ID you are trying to reach does not exist.
    "500":
      description: "An unexpected error occurred on the server. Please contact our support team, providing the error identifier (`ErrorIdentifier`) and we will do our best to help."
  securitySchemes:
    basicAuth:
      type: http
      description: "Endpoints requests are authenticated using HTTPS Basic Auth. See documentation at https://dev.mailjet.com/email/guides/#authentication"
      scheme: basic
tags:
  - name: Automation
    description: "Mailjet's Automation API allows you to create, manage, and execute automated email workflows\nbased on triggers and conditions. With these endpoints, you can set up sophisticated customer\njourneys, drip campaigns, and event-based messaging that respond to your contacts' behaviors\nand interactions with your brand."
  - name: Campaigns
    description: "To send a marketing campaign to a contact list of your choice, you first\nneed to create a campaign draft object. In it you specify the email\ncontent, recipients, sender email, etc. Once it's sent out, a new campaign\nobject is created. These resources will help manage those objects\nand retrieve information about them."
  - name: Contacts
    description: "Contacts, Contact Lists and List Recipients are objects that help you\norganize the contacts you want to send emails to. The resources below help\nwith the management of contacts and additional contact properties\n(metadata), as well as providing information on the subscriptions done\nthrough Mailjet subscription widgets."
  - name: Domains
    description: Domain management and validation for sending emails
  - name: Email API
    description: Here you will find a list of all available resources in the Mailjet API to send and manage email messages.
  - name: Events
    description: "Helps extract details about specific delivery and engagement events - opens, clicks, email bounces, etc."
  - name: Legacy
    description: "Legacy endpoints which are generally\nfunctional, but newer resources are now available, which are easier to use\nand include a number of additional functionalities."
  - name: Message Events
    description: Events related to message delivery and engagement
  - name: Messages
    description: "Every time you send an email via Mailjet, a new message object is created.\nThese resources help retrieve details about these messages - like\nsending time, delivery and contact engagement info, recipients, message\nsize, etc."
  - name: Newsletter
    description: "The Newsletter resources provide functionality to manage email newsletter\ncampaigns. These endpoints allow you to create, customize, and send newsletters\nto your contact lists. These are legacy endpoints - for newer newsletter\nfunctionality, please refer to the Campaigns section."
  - name: Parse API
    description: "Parse the content, header and/or attachments of\nincoming emails and deliver it to a webhook of your choice. This makes the\nprocessing of inbound messages much easier, since all that remains is to\nsave the info to a CRM or database."
  - name: Segmentation
    description: "Segmentation is an extremely useful tool used to target a specific group\nof customers with a dedicated campaign. Create segments based on contact\nproperties or the contact activity (opens, clicks). Segmentation helps you\nfocus your campaigns on specific demographics, create re-engagement\ncampaigns, etc.\n\n\nThese resources help you manage your segmentation formulas."
  - name: Send Email
    description: "Send API v3 and v3.1 are part of Mailjet's transactional messaging suite.\nSend API v3.1 gives more detailed feedback information on your sendings,\nwhile Send API v3 gives you a higher sending limit per single API call.\n\n\nFor information on sending email campaigns to a list of contacts, please\nsee the\n[Campaigns](https://dev.mailjet.com/guides/#send-marketing-campaigns)\nsection."
  - name: Senders
    description: "Creating and validating a sender email address or domain is necessary\nbefore you can send emails through Mailjet. These resources help you\nmanage your sender emails and domains. You can also retrieve the necessary\ninformation to edit your domain's SPF and DKIM records, as well as perform\nthe necessary validations."
  - name: Settings
    description: "Resources which help you edit your profile or user information, as\nwell as manage your API Keys and shared access settings."
  - name: Sms API
    description: Resources in the Mailjet API to send and manage SMS messages.
  - name: Statistics
    description: "The statistics resources provide a read-only access to Mailjet\nstatistics. The different endpoints allow extracting metrics groups\nbased on different factors, such as campaigns, contacts, lists, recipient\ndomain providers, link clicks, etc.\n\n\n> Note: Use `/statcounters` to retrieve your key performance statistics\nfor specific campaigns, contact lists or your API Key as a whole. See the\n[Statistics\nsection](https://dev.mailjet.com/guides/#key-performance-statistics) of\nour Email API Guide for more information."
  - name: Templates
    description: "Templates are essential building blocks for campaigns, transactional\nemails or automation workflows. These resources allow managing\ntemplates and their content."
  - name: Webhooks
    description: "Track email delivery and engagement events\nthen forward the information to a webhook URL of your choice. This can be used\nto create additional workflows - react to spam reports, identify\nbounced email addresses, sync unsubscribed contacts, etc."
externalDocs:
  url: "https://dev.mailjet.com/"
  description: Mailjet documentation website